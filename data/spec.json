{
    "swagger": "2.0",
    "info": {
        "title": "Vacasa Connect",
        "version": "V1",
        "description": "
            Welcome to Vacasa Connect!  Connect is a RESTful JSON API interface for Vacasa services.\n\n

            ### _How can I use Connect?_\n
            You will need an HTTP client -- either a library or an application -- to interact with the API.  Consider [Paw](https://paw.cloud/] (for Mac)) (for Mac) or [Postman](https://www.getpostman.com/apps).\n\n

            ### _Having Trouble? Check your Content-Type header._\n
            All requests should include a Content-Type: application/vnd.api+json header.\n\n

            ### _How do I give feedback or get support?_\n
            Please speak to your supervisor or product representative.\n\n

            # JSON-API + OpenAPI\nThis API adheres to the [JSON-API 1.0 spec](http://jsonapi.org/format/).\n\n
            Our spec files conform to [OpenAPI 2.0/Swagger specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md).  There are many [libraries and clients](https://swagger.io/open-source-integrations/]) available for OpenAPI, which should ease your integration efforts.\n\n
            Some conventions are not covered in the JSON-API spec.  See sections below for further convention guides.\n\n

            # Authentication\nThe Connect API supports API token-based authentication.\n\n
            Two endpoints are available to assist in managing your authenticated sessions:\n\n
                - Create Authenticated Session\n
                - Refresh Authenticated Session\n\nTo begin using Connect, you will need an API Secret and API Key.  Speak to your product representative to obtain your secret and key.\n\n

            # Error Responses\nErrors follow JSON-API spec: [http://jsonapi.org/format/#errors](http://jsonapi.org/format/#errors)\n\n
            Validation errors can be found in the error response JSON body `meta` node. \n\n

            # Filtering\n
            Filtering follows recommendation defined at [http://jsonapi.org/recommendations/#filtering](http://jsonapi.org/recommendations/#filtering).\n\n

            # Localization\n
                ## Requests\n
                Localization HTTP headers **MAY** be sent with each request to define the preferred language and country, timezone, or currency of response data.\n\n
                The request **MAY** be honored.  If the content cannot be delivered as requested in the localization headers, an error response is returned.\n\n
                See Localization Trait for request header definitions.\n\n

                ## Responses\n
                Response content localization is expressed in the following HTTP headers:\n\n
                    - `Content-Language`\n
                    - `X-Timezone`\n\n
                Format will follow the same supported format as for the corresponding request headers.\n\n

            # Pagination\nPagination follows specification defined at [http://jsonapi.org/format/#fetching-pagination](http://jsonapi.org/format/#fetching-pagination)\n\n
            For example\n`?page[number]=1&page[size]=5` will result in returning page 1 with 5 results\n\n

            # Sorting\n
            Sorting follows this recommendation: [http://jsonapi.org/format/#fetching-sorting](http://jsonapi.org/format/#fetching-sorting)\n\n
            For example `?sort=col1,-col2` will sort results first by `col1` (ascending) then `col2` (descending).\n\n

            # Sparse Fieldsets\n
            Sparse fieldsets are supported on non-authentication endpoints.  [http://jsonapi.org/format/#fetching-sparse-fieldsets](http://jsonapi.org/format/#fetching-sparse-fieldsets)\n\n
                ## Example\n`?fields[Reservation]=reservation_id,channel` will retrieve only the `reservation_id` and `channel` properties of `Reservation` resource objects.\n\n
                Sparse fieldsets may also be applied to included resource objects.\n\n
                Only top-level object resource attributes can be specified.
        "
    }
,
    "host": "connect.vacasa.com",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "Auth": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "paths": {
        "/v1/accounting-entity-units/{id}": {
    "get": {
        "operationId": "get-accounting-entity-unit-by-id",
        "summary": "Get Accounting Entity Unit by ID",
        "tags": [
            "Accounting Entity Units"
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/accounting-entity-unit-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "patch": {
        "operationId": "update-accounting-entity-unit-by-id",
        "summary": "Update Accounting Entity Unit",
        "tags": [
            "Accounting Entity Units"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["accounting-entity-unit"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "accounting_entity_id": {
                                            "type": "integer",
                                            "description": "The related accounting entity id."
                                        },
                                        "created_by": {
                                            "type": "integer"
                                        },
                                        "currency_id": {
                                            "type": "integer",
                                            "description": "The related currency id."
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/accounting-entity-unit-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/accounting-entity-units": {
    "get": {
        "operationId": "get-accounting-entity-unit-list",
        "summary": "Get Accounting Entity Units List",
        "tags": [
            "Accounting Entity Units"
        ],
        "parameters": [
            {
                "name": "filter[id]",
                "in": "query",
                "description": "Comma-delimited list of accounting entity unit IDs. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "name": "filter[currency_code]",
                "in": "query",
                "description": "Filter results by currency code.",
                "type": "string"
            },
            {
                "name": "filter[currency_id]",
                "in": "query",
                "description": "Filter results by currency id. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "name": "filter[end_date]",
                "in": "query",
                "description": "Filter results by end date.",
                "type": "string"
            },
            {
                "name": "filter[end_date_max]",
                "in": "query",
                "description": "Filter results by end date max.",
                "type": "string"
            },
            {
                "name": "filter[end_date_min]",
                "in": "query",
                "description": "Filter results by end date min.",
                "type": "string"
            },
            {
                "name": "filter[start_date]",
                "in": "query",
                "description": "Filter results by start date.",
                "type": "string"
            },
            {
                "name": "filter[id]",
                "in": "query",
                "description": "Filter results by id. May include a comma-seperated list.",
                "type": "integer"
            },
            {
                "name": "filter[start_date_max]",
                "in": "query",
                "description": "Filter results by start date max.",
                "type": "string"
            },
            {
                "name": "filter[start_date_min]",
                "in": "query",
                "description": "Filter results by start date min.",
                "type": "string"
            },
            {
                "name": "filter[unit_id]",
                "in": "query",
                "description": "Filter results by unit id. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/accounting-entity-unit-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    },
    "post": {
        "operationId": "create-accounting-entity-unit-list",
        "summary": "Create Accounting Entity Unit",
        "tags": [
            "Accounting Entity Units"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["accounting-entity-unit"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "required": [
                                        "accounting_entity_id",
                                        "currency_id",
                                        "unit_id"
                                    ],
                                    "properties": {
                                        "accounting_entity_id": {
                                            "type": "integer",
                                            "description": "The related accounting entity id."
                                        },
                                        "created_by": {
                                            "type": "integer"
                                        },
                                        "currency_id": {
                                            "type": "integer",
                                            "description": "The related currency id."
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/accounting-entity-unit-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/acquisitions": {
    "get": {
        "operationId": "get-acquisitions-list",
        "summary": "Get Acquisitions List",
        "tags": [
            "Acquisitions"
        ],
        "parameters": [
            {
                "name": "filter[id]",
                "in": "query",
                "description": "Comma-delimited list of acquisition IDs",
                "type": "string"
            },
            {
                "name": "filter[name]",
                "in": "query",
                "description": "Returns acquisitions with a partial or full match for `name`.",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/acquisition-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/v1/amenities-groups": {
            "get": {
                "operationId": "get-amenities-groups",
                "summary": "Get Amenities Groups List",
                "tags": [
                    "Amenities"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related resources in the response.  Currently supports: `content`.",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amenity-group-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/amenities": {
            "get": {
                "operationId": "get-amenities-list",
                "summary": "Get Amenities List",
                "tags": [
                    "Amenities"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Options available are \"options\", \"categories\", \"content\"",
                        "type": "string"
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "Filter by amenity name.",
                        "type": "string"
                    },

                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "in": "query",
                        "name": "filter[amenity_ids]",
                        "type": "string",
                        "description": "Filter by a comma-delimited list of amenity IDs."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amenity-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/amenity-events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/amenity-event-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "summary": "Get Amenity Events List",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    },
                    {
                        "in": "query",
                        "name": "filter[event_min]",
                        "type": "integer",
                        "description": "Fetch unit_events by an minimium amenity_event_id"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "type": "string",
                        "description": "Include data about the amenity event.  A comma-delimited list.  Options are `amenity`, `amenity-category`, `amenity-group`, `amenity-option`, `amenity-property`, and `amenity-property-option`.",
                        "enum": [
                            "amenity",
                            "amenity-category",
                            "amenity-group",
                            "amenity-option",
                            "amenity-property",
                            "amenity-property-option"
                        ]
                    }
                ],
                "tags": [
                    "Amenities"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/amenity-properties": {
                "get": {
                    "operationId": "get-amenity-properties-list",
                    "summary": "Get Amenity Properties List",
                    "tags": [
                        "Amenities"
                    ],
                    "parameters": [
                        {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    },
                        {
                            "$ref": "#/parameters/trait-pageable-page-number"
                        },
                        {
                            "$ref": "#/parameters/trait-pageable-page-limit"
                        },
                        {
                            "in": "query",
                            "name": "filter[amenity_id]",
                            "type": "string",
                            "description": "Filter by one or more comma-delimited amenity IDs."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "schema": {
                                "$ref": "#/definitions/amenity-property-list"
                            }
                        },
                        "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                    },
                    "security": [
                    {
                        "Auth": []
                    }
                ]
                }
            }
,
        "/auth/refresh": {
            "post": {
                "operationId": "refresh-auth-session",
                "summary": "Refresh Authenticated Session",
                "tags": [
                    "Authentication"
                ],
                "description": "Renew an existing auth session.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/auth-refresh",
                            "example": {
                                "data": {
                                    "refresh_token": "exercitation sit qui"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/auth": {
            "post": {
                "operationId": "create-auth-session",
                "summary": "Create Authenticated Session",
                "tags": [
                    "Authentication"
                ],
                "description": "Create a refreshable auth session.  Used the returned data to build your subsequent requests.\n\n### Signature generation:\n\nSignature is a HMAC-SHA256 hash of `api_key.timestamp.api_secret` (in hex)\n\n- **api_key**: your api key\n- **timestamp**: epoch timestamp(aka unix time), for example 1507584555\n- **api_secret**: your api secret\n\n### PHP Example:\n```\n$timestamp = time();\n$correct_signature = hash_hmac('sha256', $api_key.$timestamp.$api_secret, $api_secret);\n```",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AuthLogin",
                            "example": {
                                "data": {
                                    "api_key": "ul",
                                    "timestamp": 34534039,
                                    "signature": "laboris reprehenderit sed"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                }
            }
        },
        "/v1/availability": {
            "get": {
                "operationId": "get-availability-list",
                "summary": "Get Availability List",
                "description": "
                    Fetches a list of availability data.\n

                    **NOTE:** This endpoint maintains a rolling 30-day window of eligibility unless date filters are explicitly set otherwise.

                ",
                "tags": [
                    "Availability"
                ],
                "parameters": [
                    {
                        "name": "filter[updated_at_min]",
                        "in": "query",
                        "description": "Retrieve availability where the last updated time is greater than the given value.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "description": "Filters results by provided unit id.",
                        "type": "integer"
                    },
                    {
                        "name": "filter[date]",
                        "in": "query",
                        "description": "filters results for exact match of date attribute",
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "filter[date_min]",
                        "in": "query",
                        "description": "filters results for date attribute equal to or greater than date_min. If not specified, it defaults to the current date.",
                        "type": "string",
                        "format": "date",
                        "default": "current date"
                    },
                    {
                        "name": "filter[date_max]",
                        "in": "query",
                        "description": "filters results by date attribute equal to or less than date_max. If not specified, it defaults to 30 days from the current date.",
                        "type": "string",
                        "format": "date",
                        "default": "30 days from current date"
                    },
                    {
                        "type": "string",
                        "description": "This header is deprecated. Please discontinue use of this header.",
                        "enum": ["HIT"],
                        "name": "X-Monocache",
                        "required": false,
                        "in": "header"
                    },
                    {
                        "name": "filter[available]",
                        "in": "query",
                        "description": "True if the following conditions are met:\n1. There are no conflicting reservations\n2. There is a non-zero rate",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-sortable-sort"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/availability-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/blocklists/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocklist-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "summary": "Get Blocklist by ID",
                "operationId": "get-blocklist-by-id",
                "tags": [
                    "Blocklists"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]                
            }
        },
        "/v1/blocklists": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocklist-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-sortable-sort"
                    },
                    {
                        "in": "query",
                        "name": "filter[blocklist_id]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reservation_id]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[id_min]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[created_at_min]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[created_at_max]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[updated_at_min]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[email]",
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "in": "query",
                        "name": "filter[active]",
                        "type": "boolean",
                        "description": "Valid values are 1 and 0."
                    },
                    {
                        "in": "query",
                        "name": "filter[is_blocked_or_warned]",
                        "type": "boolean",
                        "description": "Valid values are 1 and 0."
                    },
                    {
                        "in": "query",
                        "name": "filter[phone]",
                        "type": "string",
                        "description": "Returns blocked users with a partial or full  match for `phone`. Valid values are digits 0-9, non-digit characters are not allowed. Full matches for `phone` are very explicit. For example, if there is no country code provided in the input, the results may include records with country codes e.g. `filter[phone]= 5031231234` will match `+1 (503) 123-1234`, `1-503-123-1234`, `15031231234` and `5031231234`. Likewise, filter input of a full phone number including a country code will only return records of an exact match. i.e. `filter[phone]=15031231234` will only match `+1 (503) 123-1234`, `1-503-123-1234`, and `15031231234`, but not `5031231234`. Partial matches are found in a sequential manner, i.e. `503123` will match `503-123-1234`, but not `503-456-1234`"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "summary": "Get Blocklist List",
                "tags": [
                    "Blocklists"
                ],
                "operationId": "get-blocklist-list",
                "security": [
                    {
                        "Auth": []
                    }
                ]                
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocklist-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "operationId": "post-blocklists",
                "summary": "Create Blocklist",
                "tags": [
                    "Blocklists"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["blocklists"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "reservation_id",
                                                "first_name",
                                                "last_name",
                                                "email",
                                                "phone",
                                                "block",
                                                "warn"
                                            ],
                                            "properties": {
                                                "reservation_id": {
                                                    "type": "integer"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "block": {
                                                    "type": "integer"
                                                },
                                                "warn": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/cities": {
            "get": {
                "operationId": "get-city-list",
                "summary": "Get cities List",
                "tags": [ "Locations" ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/city-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/codes": {
    "get": {
        "operationId": "get-codes-list",
        "summary": "Get Codes List",
        "tags": [
            "Codes"
        ],
        "parameters": [
            {
                "name": "filter[id]",
                "in": "query",
                "description": "",
                "type": "integer"
            },
            {
                "name": "filter[code_type_id]",
                "in": "query",
                "description": "",
                "type": "integer"
            },
            {
                "name": "filter[code]",
                "in": "query",
                "description": "",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/code-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/v1/code-types": {
    "get": {
        "operationId": "get-code-types-list",
        "summary": "Get CodeTypes List",
        "tags": [
            "Codes"
        ],
        "parameters": [
            {
                "name": "filter[code_type]",
                "in": "query",
                "description": "",
                "type": "string"
            },
            {
                "name": "filter[id]",
                "in": "query",
                "description": "",
                "type": "integer"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/code-type-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/v1/contacts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contact-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "description": "Retrieve a list of contacts.",
                "tags": [
                    "Contacts"
                ],
                "summary": "Get Contacts List",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter[email]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[contact_id]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "filter[user_id]",
                        "type": "integer",
                        "description": "Filters contacts by `ContactID` associated with user matching `UserID` in `vacasa.logins` database table"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a Contact",
                "description": "Creates a Contact and also creates a Login if one doesn't exist.",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                {
                    "name": "contact",
                    "in": "body",
                    "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["contacts"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "address_1": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "address_2": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "country_code": {
                                                    "type": "string",
                                                    "maxLength": 2
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "A valid Login ID."
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "maxLength": 100
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "language_id": {
                                                    "type": "integer",
                                                    "description": "A language_id for a valid language.  Foreign key to table languages."
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "maxLength": 100,
                                                    "pattern": "^[0-9 .\\-()]+$"
                                                },
                                                "phone_notes": {
                                                    "type": "string",
                                                    "description": "Corresponds to “Phone Notes” on Contact page in Admin, e.g., [https://www.vacasa.com/admin/tools/rm/owners?ContactID=20557](https://www.vacasa.com/admin/tools/rm/owners?ContactID=20557)."
                                                },
                                                "send_email": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "Passing `true` will cause an \"Owner Welcome\" email to be sent to the Contact's email address."
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "tax_entity_name": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "maxLength": 10
                                                }
                                            },
                                            "required": [
                                                "first_name",
                                                "email",
                                                "language_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "attributes",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/definitions/contact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                }
            }
        },
        "/v1/contacts/{id}": {
            "get": {
                "operationId": "get-contact-by-id",
                "summary": "Get Contact by ID",
                "tags": [
                    "Contacts"
                ],
                "description": "Retrieve a single contact by its primary identifier.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "Retrieve a single contact",
                        "schema": {
                            "$ref": "#/definitions/contact-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contact-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Update a Contact",
                "description": "Updates an existing Contact.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "required": ["data"],
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": ["type", "attributes"],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["contacts"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "address_1": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "address_2": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "country_code": {
                                                    "type": "string",
                                                    "maxLength": 2
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "maxLength": 100,
                                                    "description": "A \"Vacasa Login Change\" email will be sent if this differs from the existing contact."
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "language_id": {
                                                    "type": "integer",
                                                    "description": "A language_id for a valid language."
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "maxLength": 100,
                                                    "pattern": "^[0-9 .\\-()]+$"
                                                },
                                                "phone_notes": {
                                                    "type": "string"
                                                },
                                                "send_email": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "Passing `true` will cause an \"Owner Welcome\" email to be sent to the Contact's email address."
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "tax_entity_name": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "updated_by": {
                                                    "type": "integer",
                                                    "description": "A valid Login ID."
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "maxLength": 10
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Contacts"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/contacts/{id}/finances": {
    "patch": {
        "tags": ["Contacts"],
        "summary": "Update Contacts Finances",
        "description": "Updates the financial information for a given contact.",
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "integer"
            },
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["type", "attributes" ],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["contacts"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "account_name": {
                                            "type": "string",
                                            "maxLength": 100
                                        },
                                        "account_number": {
                                            "type": "string",
                                            "maxLength": 25
                                        },
                                        "routing_number": {
                                            "type": "string",
                                            "maxLength": 20
                                        },
                                        "tax_id": {
                                            "type": "string",
                                            "pattern": "^[0-9-]*$",
                                            "maxLength": 11
                                        },
                                        "tax_entity_name": {
                                            "type": "string",
                                            "maxLength": 100
                                        },
                                        "tax_form_code_id": {
                                            "type": "integer"
                                        },
                                        "w9_id" : {
                                            "type": "integer"
                                        },
                                        "business_name" : {
                                            "type": "string"
                                        },
                                        "tax_classification_type" : {
                                            "type": "string"
                                        },
                                        "tax_classification" : {
                                            "type": "string"
                                        },
                                        "tax_classification_other" : {
                                            "type": "string"
                                        },
                                        "exempt_payee_code" : {
                                            "type": "string"
                                        },
                                        "exempt_fatca_code" : {
                                            "type": "string"
                                        },
                                        "account_numbers" : {
                                            "type": "string"
                                        },
                                        "ein" : {
                                            "type": "string"
                                        },
                                        "signature" : {
                                            "type": "string"
                                        },
                                        "sign_date" : {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "ip_address" : {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": [
                        "data"
                    ]
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/v1/contracts": {
            "get": {
                "operationId": "get-contracts-list",
                "summary": "Get Contracts List",
                "tags": [
                    "Contracts"
                ],
                "description": "This endpoint requires an API key with Sensitive Data authorization permissions.",
                "parameters": [
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "filter[active_only]",
                        "in": "query",
                        "description": "Return only active units.  True by default.",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "filter[owner_id]",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Create Contract",
                "description": "Create a contract.  Links a contract to a contact.  This endpoint will create an owner with percentage ownership and tax ownership.",
                "tags": [
                    "Contracts"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["contracts"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "amendment_by_notice_id": {
                                                    "type": "integer",
                                                    "default": 4,
                                                    "description": "Foreign key to table contract_amendment_by_notice, corresponds to “Amendment by Notice” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "channel_fee_cost_sharing_id": {
                                                    "type": "integer",
                                                    "default": 5,
                                                    "description": "Foreign key to table contract_channel_fee_cost_sharing, corresponds to “Channel Fee Cost Sharing” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "A valid Login ID.  Foreign key to logins.UserID."
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Format is `YYYY-MM-DD`. start_date and end_date must not overlap existing contracts associated with the given unit_id."
                                                },
                                                "form_id": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "description": "Foreign key to table contract_form, corresponds to “Contract Form” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "management_fee": {
                                                    "type": "number",
                                                    "description": "management_fee must be <= 1.  management_fee minus referral_discount MUST be >= 0"
                                                },
                                                "monthly_rent": {
                                                    "type": "number",
                                                    "description": "Corresponds to “Fixed Monthly Rent” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "owners": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "percentage_ownership": {
                                                                "type": "number",
                                                                "description": "Sum of all percentage_ownership values must equal 1."
                                                            },
                                                            "tax_ownership": {
                                                                "type": "number",
                                                                "description": "Sum of all tax_ownership values must equal 1."
                                                            },
                                                            "contact_id": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "percentage_ownership",
                                                            "tax_ownership",
                                                            "contact_id"
                                                        ]
                                                    }
                                                },
                                                "referral_discount": {
                                                    "type": "number",
                                                    "default": 0,
                                                    "description": "referral_discount MUST be 0 if referral_eligible is false.  management_fee minus referral_discount MUST be >= 0. Corresponds to “Owner Referral Discount” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)",
                                                    "minimum": 0,
                                                    "maximum": 1
                                                },
                                                "referral_eligible": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "description": "Corresponds to “Owner Referral Eligible” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Format is `YYYY-MM-DD`. start_date and end_date must not overlap existing contracts associated with the given unit_id."
                                                },
                                                "template_version_id": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "description": "Foreign key to table contract_template_version, corresponds to “Template Version” on Contract page in Admin, e.g., [https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085](https://www.vacasa.com/admin/dashboard/finance/contract/edit?ContractID=36085)."
                                                },
                                                "unit_id": {
                                                    "type": "integer"
                                                },
                                                "secured_by": {
                                                    "type": "integer",
                                                    "description": "A valid Login ID for the user that secured the contract. Foreign key to logins.UserID."
                                                }
                                            },
                                            "required": [
                                                "unit_id",
                                                "management_fee",
                                                "start_date",
                                                "end_date",
                                                "owners",
                                                "created_by"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "attributes",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        },
        "/v1/contracts{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Update Contract",
                "description": "Update a contract.",
                "tags": [
                    "Contracts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["contracts"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "end_date"
                                            ],
                                            "properties": {
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Format is `YYYY-MM-DD`. start_date and end_date must not overlap existing contracts associated with the given unit_id."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/contract-amendment-by-notices": {
            "get": {
                "operationId": "get-contract-amendment-by-notices",
                "summary": "Contract Amendment By Notices List",
                "tags": [
                    "Contracts"
                ],
                "description": "This endpoint requires an API key with Sensitive Data authorization permissions.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract-amendment-by-notices-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/contract-channel-fee-cost-sharings": {
            "get": {
                "operationId": "get-contract-channel-fee-cost-sharings",
                "summary": "Contract Channel Fee Cost Sharings List",
                "tags": [
                    "Contracts"
                ],
                "description": "This endpoint requires an API key with Sensitive Data authorization permissions.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract-channel-fee-cost-sharings-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/contract-forms": {
            "get": {
                "operationId": "get-contract-forms",
                "summary": "Contract Forms List",
                "tags": [
                    "Contracts"
                ],
                "description": "This endpoint requires an API key with Sensitive Data authorization permissions.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract-form-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/contract-template-versions": {
            "get": {
                "operationId": "get-contract-template-versions",
                "summary": "Contract Template Versions List",
                "tags": [
                    "Contracts"
                ],
                "description": "This endpoint requires an API key with Sensitive Data authorization permissions.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract-template-version-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/countries": {
            "get": {
                "operationId": "get-countries-list",
                "summary": "Get Countries List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/country-extended-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/destinations": {
            "get": {
                "operationId": "get-destinations-list",
                "summary": "Get Destinations List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of elements to include.\n Available includes are: \"content\"",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/destination-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]                
            }
        },
        "/v1/destinations/alternates": {
            "get": {
                "operationId": "get-destinations-alternates",
                "summary": "Get Destinations Alternates List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/destination-alternate-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            
            }
        },
        "/v1/finance-reporting-locations": {
    "get": {
        "operationId": "get-finance-reporting-location-list",
        "summary": "Get Finance Reporting Location List",
        "tags": [
            "Finance Reporting Locations"
        ],
        "parameters": [
            {
                "name": "filter[active]",
                "in": "query",
                "description": "Filter results by active field available values are 0 and 1.",
                "type": "integer"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/finance-reporting-location-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/finance-reporting-locations/{id}": {
    "get": {
        "operationId": "get-finance-reporting-location-by-id",
        "summary": "Get Finance Reporting Location by ID",
        "tags": [
            "Finance Reporting Locations"
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/finance-reporting-location"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/guarantee-dates": {
            "get": {
                "operationId": "get-guarantee-dates-list",
                "summary": "Get Guarantee Date List",
                "tags": [
                    "Guarantees"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/guarantee-date-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/guarantees": {
            "get": {
                "operationId": "get-guarantees-list",
                "summary": "Get Guarantees List",
                "tags": [
                    "Guarantees"
                ],
                "description": "Retrieve guarantees for active units.",
                "parameters": [
                    {
                        "name": "filter[guarantee_month_min]",
                        "in": "query",
                        "description": "",
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/guarantee-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/identity-checks": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/identity-check-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": [
                                        "object"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["identity-check"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "code_id": {
                                                    "type": "integer"
                                                },
                                                "external_reference_id": {
                                                    "type": "string"
                                                },
                                                "reservation_id": {
                                                    "type": "integer"
                                                },
                                                "unit_id": {
                                                    "type": "integer"
                                                },
                                                "blocklist_id": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "maxLength": 100
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "maxLength": 50
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "zip": {
                                                    "type": "string",
                                                    "maxLength": 10
                                                },
                                                "passed_initial_check": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Allowed values are 1, 0."
                                                },
                                                "differentiator_shown": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Allowed values are 1, 0."
                                                },
                                                "questions_quantity_shown": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "questions_quantity_correct": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "challenge_questions_quantity_shown": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "challenge_questions_quantity_correct": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "received_soft_fail": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Allowed values are 1, 0."
                                                },
                                                "received_hard_fail": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Allowed values are 1, 0."
                                                },
                                                "approved_for_checkout": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Allowed values are 1, 0."
                                                },
                                                "external_response_message": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "code_id",
                                                "external_reference_id",
                                                "reservation_id",
                                                "unit_id",
                                                "first_name",
                                                "last_name",
                                                "email",
                                                "phone",
                                                "address",
                                                "zip"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "attributes",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "summary": "Create Identity Check",
                "tags": [
                    "Identity Checks"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/inquiries": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inquiry-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "summary": "Create Inquiry",
                "tags": [
                    "Inquiries"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["inquiry"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "unit_id": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "email_id": {
                                                    "type": "integer"
                                                },
                                                "source": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 100
                                                },
                                                "listing_id": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "date": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "date"
                                                },
                                                "first_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 50
                                                },
                                                "last_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 50
                                                },
                                                "check_in": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "date"
                                                },
                                                "check_out": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "date"
                                                },
                                                "adults": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "children": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "phone": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 50
                                                },
                                                "comments": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "clean_number": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 20
                                                },
                                                "area_code": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "maxLength": 3
                                                },
                                                "country_phone_code": {
                                                    "type": "integer",
                                                    "default": 0
                                                },
                                                "status": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "unsubscribe": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "available": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "duplicate": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "email_id",
                                                "email"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/languages": {
            "get": {
                "operationId": "get-languages-list",
                "summary": "Get Languages List",
                "tags": [
                    "Languages"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "type": "string",
                        "default": "application/vnd.api+json"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/language-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/logins": {
    "get": {
        "operationId": "get-logins-list",
        "summary": "Get Logins List",
        "tags": [
            "Logins"
        ],
        "parameters": [
            {
                "name": "filter[email]",
                "in": "query",
                "description": "Logins matching this email address",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/login-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/v1/logins/{id}": {
    "parameters": [
        {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
        }
    ],
    "get": {
        "operationId": "get-logins-by-id",
        "summary": "Get Login by ID",
        "tags": [
            "Logins"
        ],
        "parameters": [
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/login-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    }
}
,
        "/managedunits": {
            "post": {
                "operationId": "post-managed-units",
                "summary": "Create Managed Units",
                "tags": [
                    "Management"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "unit_id": {
                                                "type": "integer"
                                            },
                                            "integration_partner_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/management/accounts/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-management-account-by-id",
                "summary": "Get Account by ID",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account"
                        }
                    }
                }
            }
        },
        "/v1/management/accounts": {
            "get": {
                "operationId": "get-management-accounts-list",
                "summary": "Get Accounts List",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account-list"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "post": {
                "operationId": "post-management-accounts",
                "summary": "Create Account",
                "tags": [
                    "Management"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_contact_email": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]                
            }
        },
        "/v1/management/partnercredentials/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-management-partnercredentials-by-id",
                "summary": "Get Partner Credential by ID",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/partner-credential"
                        }
                    }
                }
            }
        },
        "/v1/management/partnercredentials": {
            "get": {
                "operationId": "get-management-partnercredentials-list",
                "summary": "Get Partner Credentials List",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/partner-credential"
                        }
                    }
                }
            }
        },
        "/v1/management/partners/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-management-partner-by-id",
                "summary": "Get Integration Partner by ID",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration-partner-single"
                        }
                    }
                }
            }
        },
        "/v1/management/partners/{partner_id}/unit/{unit_id}": {
            "parameters": [
                {
                    "name": "partner_id",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "unit_id",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "delete": {
                "operationId": "delete-management-partners-id-unit-id",
                "summary": "Delete Partner Unit",
                "tags": [
                    "Management"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                }
            }
        },
        "/v1/management/partners": {
            "get": {
                "operationId": "get-management-partners-list",
                "summary": "Get Integration Partners List",
                "tags": [
                    "Management"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration-partner-list"
                        }
                    }
                }
            },
            "post": {
                "operationId": "post-management-partners",
                "summary": "Create Integration Partner",
                "tags": [
                    "Management"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "name", "description" ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        }
,
        "/v1/offices": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/office-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "summary": "Get Office List",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page[number]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "page[limit]",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Locations"
                ],
                "operationId": "get-offices-list",
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/owners": {
            "get": {
                "operationId": "get-owners-list",
                "summary": "Get Owner List",
                "tags": [
                    "Owners"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter[user_id]",
                        "type": "integer",
                        "description": "Filters owners by `ContactID` associated with user matching `UserID` in `vacasa.logins` database table"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/owner-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        },
        "/v1/owner-holds": {
     "get": {
         "operationId": "get-owner-hold-list",
         "summary": "Get Owner Holds List",
         "tags": [
             "Owner Holds"
         ],
         "parameters": [
             {
                 "name": "filter[owner_hold_id]",
                 "in": "query",
                 "description": "Comma-delimited list of Owner Hold IDs. May include a comma-seperated list.",
                 "type": "string"
             },            
             {
                 "name": "filter[reservation_id]",
                 "in": "query",
                 "description": "Comma-delimited list of Reservation IDs. May include a comma-seperated list.",
                 "type": "string"
             },
             {
                 "name": "filter[unit_id]",
                 "in": "query",
                 "description": "Filter results by unit id.",
                 "type": "string"
             },
             {
                "name": "filter[start_date]",
                "in": "query",
                "description": "Filter results with reservation last night on or after this date.",
                "type": "string"
            },
             {
                 "name": "filter[end_date]",
                 "in": "query",
                 "description": "Filter results with reservation first night on or before this date.",
                 "type": "string"
             },
             {
                 "$ref": "#/parameters/trait-pageable-page-number"
             },
             {
                 "$ref": "#/parameters/trait-pageable-page-limit"
             },
             {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }         ],
         "responses": {
             "200": {
                 "description": "OK",
                 "schema": {
                     "$ref": "#/definitions/owner-hold-list"
                 }
             },
             "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }         },
         "security": [
                    {
                        "Auth": []
                    }
                ]
      }
 },
        "/v1/owner-holds/{id}": {
     "get": {
         "operationId": "owner-holds-by-id",
         "summary": "Get Owner Hold by ID",
         "tags": [
             "Owner Holds"
         ],
         "responses": {
             "200": {
                 "description": "OK",
                 "schema": {
                     "$ref": "#/definitions/owner-hold-single"
                 }
             },
             "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }         },
         "security": [
                    {
                        "Auth": []
                    }
                ]     }
 },
        "/v1/pages": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/page-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "summary": "Get Page List",
                "tags": [
                    "Pages"
                ],
                "operationId": "get-page-list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page[number]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "page[limit]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "filter[slug]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[pageid]",
                        "type": "string",
                        "description": "Filter by a page `id`.  Comma-separated list of IDs."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "type": "string",
                        "description": "A comma-delimited list of objects to include.  Possible values are \"content\"."
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "description": "Retrieve a paginated list of pages.",
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/quotes": {
            "get": {
                "operationId": "get-quote",
                "summary": "Get Quote",
                "tags": [
                    "Quotes"
                ],
                "parameters": [
                    {
                        "name": "adults",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 0
                    },
                    {
                        "name": "pets",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "description": "The default max is `4`, although the actual max may vary per unit"
                    },
                    {
                        "name": "unit_id",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "arrival",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date",
                        "description": "Send date in format YYYY-MM-DD."
                    },
                    {
                        "name": "departure",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date",
                        "description": "Send date in format YYYY-MM-DD."
                    },
                    {
                        "name": "trip_protection",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "description": "`-1` = No, `0` = TBD, `1` = Yes"
                    },
                    {
                        "in": "query",
                        "name": "discount_id",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/quote-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v2/quotes": {
            "get": {
                "operationId": "get-quote-v2",
                "summary": "Get Quote V2",
                "tags": [
                    "Quotes"
                ],
                "parameters": [
                    {
                        "name": "adults",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 0
                    },
                    {
                        "name": "pets",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "description": "The default max is `4`, although the actual max may vary per unit"
                    },
                    {
                        "name": "unit_id",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "arrival",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date",
                        "description": "Send date in format YYYY-MM-DD."
                    },
                    {
                        "name": "departure",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date",
                        "description": "Send date in format YYYY-MM-DD."
                    },
                    {
                        "name": "trip_protection",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "description": "`-1` = No, `0` = TBD, `1` = Yes"
                    },
                    {
                        "in": "query",
                        "name": "discount_id",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/quote-v2-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                        "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                        "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                        "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                        "$ref": "#/definitions/standard-error"
                        }
                    }

                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/region-cities": {
            "get": {
                "operationId": "get-region-cities-list",
                "summary": "Get Region Cities List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/region-city-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/region-phones": {
            "get": {
                "operationId": "get-region-phones-list",
                "summary": "Get Region Phones List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/region-phone-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/regions": {
            "get": {
                "operationId": "get-regions-list",
                "summary": "Get Region List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/region-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/reservation-adjustments": {
    "post": {
        "responses": {
            "201": {
                "description": "Created",
                "schema": {
                    "$ref": "#/definitions/Folio"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "summary": "Create Reservation Adjustment",
        "description": "Create a preview of the result of applying an Adjustment Policy to a Reservation",
        "tags": [
            "Reservation Adjustments"
        ],
        "operationId": "create-reservation-adjustment",
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "$ref": "#/definitions/reservation-adjustment-post"
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/booking/{reservation-id}/adjustment/{uuid}": {
    "patch": {
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "summary": "Update Reservation Adjustment",
        "description": "Apply an Adjustment Policy to a Reservation",
        "operationId": "update-reservation-adjustment",
        "parameters": [
            {
                "in": "path",
                "name": "reservation-id",
                "required": true,
                "type": "string"
            },
            {
                "in": "path",
                "name": "uuid",
                "required": true,
                "type": "string",
                "format": "UUID-V4",
                "description": "The `uuid` of the Adjustment to be applied. Example: `aeb06b18-32ff-4455-a3fa-140e85f79d5a`"
            },
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "$ref": "#/definitions/reservation-adjustment-patch"
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "tags": [
            "Reservation Adjustments"
        ],
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/reservation-guests/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "summary": "Delete Reservation Guest",
                "description": "Remove a reservation guest.",
                "tags": [
                    "Reservation Guests"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            },
            "get": {
                "operationId": "get-reservation-guests-by-id",
                "summary": "Get Reservation Guest by ID",
                "tags": [
                    "Reservation Guests"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservationguest-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservationguest-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Update Reservation Guest",
                "description": "Update the contact information for a reservation guest.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "required": ["data"],
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["reservation-guest"]
                                        },
                                        "id": {
                                            "type": "integer"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "id",
                                        "attributes"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Reservation Guests"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/reservation-guests": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "title": "ReservationGuest",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "reservation_id": {
                                            "type": "integer"
                                        },
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get Reservation Guest List",
                "description": "Returns a list of reservation guests",
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter[email]",
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "in": "query",
                        "name": "filter[reservation_id]",
                        "type": "integer"
                    },
                    {
                        "description": "Response will only contain guests with IDs greater than or equal to this",
                        "in": "query",
                        "name": "filter[guest_id_min]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page[number]",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "page[limit]",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Reservation Guests"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservationguest-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "summary": "Create Reservation Guest",
                "tags": [
                    "Reservation Guests"
                ],
                "operationId": "post-reservation-guests",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["reservation-guest"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "reservation_id",
                                                "first_name",
                                                "last_name",
                                                "email"
                                            ],
                                            "properties": {
                                                "reservation_id": {
                                                    "type": "integer"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/reservations-abandoned": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "summary": "Create an \"abandoned\" reservation - used when a guest abandons their cart.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["reservations"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address_1": {
                                                            "type": "string",
                                                            "maxLength": 100
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "maxLength": 50
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "maxLength": 3
                                                        },
                                                        "zip": {
                                                            "type": "string",
                                                            "maxLength": 10
                                                        }
                                                    }
                                                },
                                                "adults": {
                                                    "type": "integer"
                                                },
                                                "anonymous_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "booked_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "default": "Null",
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which the reservation is transacted in."
                                                },
                                                "cancellation_date": {
                                                    "type": "string",
                                                    "default": "The current time of the request",
                                                    "pattern": "^(\\d{4}-\\d{2}-\\d{2})(T{1})(\\d{2}:{1}\\d{2}:{1}\\d{2})(Z{1}|[+-]{1}\\d{2}:{1}\\d{2})$",
                                                    "description": "The cancellation date of the reservation. Must be in the following iso8601-like format\n**(YYYY-mm-dd(T)HH:ii:ss(Z OR +-HH:ii)**",
                                                    "example": "'2019-04-19T00:00:00-07:00', '2019-04-19T00:00:00Z'"
                                                },
                                                "cancellation_reason": {
                                                    "type": "string",
                                                    "maxLength": 500,
                                                    "default": "Cart Abandoned"
                                                },
                                                "children": {
                                                    "type": "integer"
                                                },
                                                "cleaning_fees": {
                                                    "type": "number"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "User ID from logins.UserID that gets written to Reservations.CreateBy. For non-zero values, this is the Acquisition Rep's UserID (you can see your UserID on the org chart - https://www.vacasarentals.com/admin/orgchart.php)"
                                                },
                                                "creation_date": {
                                                    "type": "string",
                                                    "default": "The current time of the request, or the provided value of cancellation date",
                                                    "pattern": "^(\\d{4}-\\d{2}-\\d{2})(T{1})(\\d{2}:{1}\\d{2}:{1}\\d{2})(Z{1}|[+-]{1}\\d{2}:{1}\\d{2})$",
                                                    "description": "The creation date of the reservation. Must be in the following iso8601-like format\n**(YYYY-mm-dd(T)HH:ii:ss(Z OR +-HH:ii)**",
                                                    "example": "'2019-04-19T00:00:00-07:00', '2019-04-19T00:00:00Z'"
                                                },
                                                "discount_id": {
                                                    "type": "integer",
                                                    "default": 0,
                                                    "description": "Validated against discount.DiscountID"
                                                },
                                                "display_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which is preferred by the guest for display purposes."
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "fee_amount": {
                                                    "type": "number"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "first_night": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "last_night": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "pets": {
                                                    "type": "integer"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "rent": {
                                                    "type": "number"
                                                },
                                                "source": {
                                                    "type": "string",
                                                    "default": "VRRHHI",
                                                    "description": "A Vacasa-issued code identifying the source of this request. Validated against reservations_sources.external_source_name"
                                                },
                                                "tax_amount": {
                                                    "type": "number"
                                                },
                                                "total": {
                                                    "type": "number"
                                                },
                                                "trip_protection": {
                                                    "type": "integer"
                                                },
                                                "trip_protection_fee": {
                                                    "type": "number"
                                                },
                                                "unit_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "unit_id",
                                                "first_night",
                                                "last_night",
                                                "adults",
                                                "fee_amount",
                                                "cleaning_fees",
                                                "trip_protection_fee",
                                                "total",
                                                "tax_amount",
                                                "booked_currency_code",
                                                "children",
                                                "pets"
                                            ]
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Reservations"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/reservations-import": {
            "post": {
                "operationId": "post-reservations-import",
                "summary": "Create Reservation Import",
                "tags": [
                    "Reservations"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["reservations"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "adults",
                                                "arrival",
                                                "booked_currency_code",
                                                "departure",
                                                "first_name",
                                                "last_name",
                                                "unit_id"
                                            ],
                                            "properties": {
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address_1": {
                                                            "type": ["string", "null"]
                                                        },
                                                        "city": {
                                                            "type": ["string", "null"]
                                                        },
                                                        "state": {
                                                            "type": ["string", "null"],
                                                            "description": "ISO 3166-1 Alpha-2 state code "
                                                        },
                                                        "zip": {
                                                            "type": ["string", "null"]
                                                        },
                                                        "country_iso": {
                                                            "type": ["string", "null"],
                                                            "description": "ISO 3166-1 Alpha-2 country code"
                                                        },
                                                        "ip_address": {
                                                            "type": ["string", "null"]
                                                        }
                                                    }
                                                },
                                                "adults": {
                                                    "type": "integer",
                                                    "description": "Number of adults on reservation"
                                                },
                                                "anonymous_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "arrival": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Send date in format YYYY-MM-DD."
                                                },
                                                "autopay": {
                                                    "type": "integer",
                                                    "description": "1 = Yes, 0 = No, -1 = Special"
                                                },
                                                "booked_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which the reservation is transacted in."
                                                },
                                                "children": {
                                                    "type": "integer",
                                                    "description": "Number of children on reservation"
                                                },
                                                "clean_after_stay": {
                                                    "type": "integer",
                                                    "description": "1 = Yes, 0 = No"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "User ID from logins.UserID that gets written to Reservations.CreateBy. For non-zero values, this is the Acquisition Rep's UserID (you can see your UserID on the org chart - https://www.vacasarentals.com/admin/orgchart.php)"
                                                },
                                                "departure": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "description": "Send date in format YYYY-MM-DD."
                                                },
                                                "discount_id": {
                                                    "type": "integer",
                                                    "default": 0
                                                },
                                                "display_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which is preferred by the guest for display purposes."
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "fees": {
                                                    "type": "array",
                                                    "description": "List of fees by id and amount",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "description": "The fee_id. Validated against the `Unit`s associated fee rules and the Import Fee Whitelist.  At this time, the whitelist contains Fees `265`, `266`, `267`, and `268` only."
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "description": "The amount paid for the fee"
                                                            }
                                                        }
                                                    }
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "listing_channel_reservation_id": {
                                                    "type": "string",
                                                    "description": "The original reservation ID from the acquired company"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Use this field to provide miscellaneous information about reservation"
                                                },
                                                "paid": {
                                                    "type": "number",
                                                    "description": "The total amount paid thus far. Paid amount may not exceed total."
                                                },
                                                "pets": {
                                                    "type": "integer",
                                                    "description": "Number of pets on reservation."
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "description": "50 character limit"
                                                },
                                                "phone2": {
                                                    "type": "string"
                                                },
                                                "rent": {
                                                    "type": "array",
                                                    "description": "List of rent by day. Fields used here are date, amount, and ltd. See Folio API docs for more information",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "description": "The date of the rent item, validated to be in the date range of the reservation"
                                                            },
                                                            "rent": {
                                                                "type": "number",
                                                                "description": "The amount paid in rent for the given date"
                                                            },
                                                            "ltd": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "source": {
                                                    "type": "string",
                                                    "default": "VRRHHI",
                                                    "description": "A Vacasa-issued code identifying the source of this request. Validated against reservations_sources.external_source_name"
                                                },
                                                "taxes": {
                                                    "type": "array",
                                                    "description": "List of taxes by id and amount",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "description": "The TaxDistrictID. Validated against the `taxdistricts` table"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "description": "The amount paid for the tax"
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "description": "The total amount of the reservation (Fees + Taxes + Rent)"
                                                },
                                                "trip_protection": {
                                                    "type": "integer",
                                                    "description": "`-1` = No, `0` = TBD, `1` = Yes.",
                                                    "default": 0
                                                },
                                                "type": {
                                                    "type": "integer",
                                                    "description": "3 = Vacasa Hold, 2 = Owner Hold, 1 = Reservation"
                                                },
                                                "unit_id": {
                                                    "type": "integer",
                                                    "description": "ID of the unit the reservation is being created for"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        }
,
        "/v1/reservations-seed": {
    "post": {
        "operationId": "post-reservations-seed",
        "summary": "Create Reservation Seed",
        "tags": [
            "Reservations"
        ],
        "description": "Requests to this endpoint can be made with either a V2 quote id or granular details for stay and finances. If both are supplied, quote id data will be used. Only the following data from the V2 quote is used for reservation creation: unit_id, arrival, departure, adult, children, pets, discount_id, and trip_protection.",
        "parameters": [
            {
                "name": "body",
                "in": "body",
                "schema": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": [ "attributes", "type" ],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["reservations"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "required": [
                                        "booked_currency_code"
                                    ],
                                    "properties": {
                                        "adults": {
                                            "type": "integer",
                                            "description": "Number of adults on reservation"
                                        },
                                        "arrival": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Send date in format YYYY-MM-DD."
                                        },
                                        "booked_currency_code": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "example": "USD, EUR, CAD",
                                            "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which the reservation is transacted in."
                                        },
                                        "clean_after_stay": {
                                            "type": "boolean"
                                        },
                                        "children": {
                                            "type": "integer",
                                            "description": "Number of children on reservation"
                                        },
                                        "created_by": {
                                            "type": "integer",
                                            "description": "User ID from logins.UserID that gets written to Reservations.CreateBy. For non-zero values, this is the Acquisition Rep's UserID (you can see your UserID on the org chart - https://www.vacasarentals.com/admin/orgchart.php)"
                                        },
                                        "departure": {
                                            "type": "string",
                                            "format": "date",
                                            "description": "Send date in format YYYY-MM-DD."
                                        },
                                        "discount_id": {
                                            "type": "integer",
                                            "default": 0
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "100 character limit"
                                        },
                                        "external_note": {
                                            "type": "string",
                                            "description": "Hold data for vacasaholds.external_note or owner_hold.external_note column"
                                        },
                                        "fees": {
                                            "type": "array",
                                            "description": "List of fees by id and amount",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "The fee_id. Validated against the `Unit`s associated fee rules and the Import Fee Whitelist.  At this time, the whitelist contains Fees `265`, `266`, `267`, and `268` only."
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "description": "The amount paid for the fee"
                                                    }
                                                }
                                            }
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "description": "100 character limit"
                                        },
                                       "internal_note": {
                                            "type": "string",
                                            "description": "Hold data for vacasaholds.internal_note or owner_hold.internal_note column"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "description": "100 character limit"
                                        },
                                        "pets": {
                                            "type": "integer",
                                            "description": "Number of pets on reservation."
                                        },
                                        "phone": {
                                            "type": "string",
                                            "description": "50 character limit"
                                        },
                                        "quote_id": {
                                            "type": "string",
                                            "description": "The `id` of a quote retrieved from the `GET /quotes` endpoint"
                                        },
                                        "rent": {
                                            "type": "array",
                                            "description": "List of rent by day. Fields used here are date, amount, and ltd. See Folio API docs for more information",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "The date of the rent item, validated to be in the date range of the reservation"
                                                    },
                                                    "rent": {
                                                        "type": "number",
                                                        "description": "The amount paid in rent for the given date"
                                                    },
                                                    "ltd": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        },
                                        "source": {
                                            "type": "string",
                                            "description": "A Vacasa-issued code identifying the source of this request."
                                        },
                                        "sub_type": {
                                            "type": "string",
                                            "description": "Hold type data for the vacasaholds.type or owner_hold.type column"
                                        },
                                        "taxes": {
                                            "type": "array",
                                            "description": "List of taxes by id and amount",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "The TaxDistrictID. Validated against the `taxdistricts` table"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "description": "The amount paid for the tax"
                                                    }
                                                }
                                            }
                                        },
                                        "type": {
                                            "type": "integer",
                                            "description": "3 = Vacasa Hold, 2 = Owner Hold, 1 = Reservation/Seed"
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "ID of the unit the reservation is being created for"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": [
                        "data"
                    ]
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/reservation-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/reservations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "operationId": "get-reservations-by-id",
                "summary": "Get Reservation by ID",
                "tags": [
                    "Reservations"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "type": "string",
                        "enum": [
                            "metatags",
                            "ownerHoldInfo",
                            "vacasaHoldInfo"
                        ],
                        "description": "A comma-separated list of includes."
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    },
                    {
                        "$ref": "#/parameters/trait-xReadFromMasterHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/reservations": {
            "get": {
                "operationId": "get-reservations-list",
                "summary": "Get Reservations List",
                "tags": [
                    "Reservations"
                ],
                "parameters": [
                    {
                        "name": "filter[created_at_min]",
                        "in": "query",
                        "description": "Reservations created after or on this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[clean_phone_1]",
                        "in": "query",
                        "description": "Reservations matching the clean_phone_1 field",
                        "type": "string"
                    },
                    {
                        "name": "filter[confirmation_code]",
                        "in": "query",
                        "description": "Reservations matching the confirmation_code(s). More than one may be included if seperated by a `,`.",
                        "type": "string"
                    },
                    {
                        "name": "filter[created_at_max]",
                        "in": "query",
                        "description": "Reservations created on or before this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[first_night_min]",
                        "in": "query",
                        "description": "Reservations with first night on or after this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[first_night_max]",
                        "in": "query",
                        "description": "Reservations with first night on or before this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[id_min]",
                        "in": "query",
                        "description": "All reservations with ID greater than or equal to the given ID.",
                        "type": "string"
                    },
                    {
                        "name": "filter[last_night_min]",
                        "in": "query",
                        "description": "Reservations with last night on or after this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[last_night_max]",
                        "in": "query",
                        "description": "Reservations with last night on or before this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[listing_channel_reservation_id]",
                        "in": "query",
                        "description": "Filter by reservation listing_channel_reservation_id",
                        "type": "string"
                    },
                    {
                        "name": "filter[reservations_source_uuid]",
                        "in": "query",
                        "description": "Reservations with the given source uuid.",
                        "type": "string"
                    },
                    {
                        "name": "filter[updated_at_min]",
                        "in": "query",
                        "description": "Reservations with `updated_at` on or after this date.",
                        "type": "string"
                    },
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "description": "Reservations for a unit matching the given id.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[email]",
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "in": "query",
                        "name": "filter[phone]",
                        "type": "string",
                        "description": "Reservations with a partial or full  match for `phone`. Valid values are digits 0-9, non-digit characters are not allowed. Full matches for `phone` are very explicit. For example, if there is no country code provided in the input, the results may include records with country codes e.g. `filter[phone]= 5031231234` will match `+1 (503) 123-1234`, `1-503-123-1234`, `15031231234` and `5031231234`. Likewise, filter input of a full phone number including a country code will only return records of an exact match. i.e. `filter[phone]=15031231234` will only match `+1 (503) 123-1234`, `1-503-123-1234`, and `15031231234`, but not `5031231234`. Partial matches are found in a sequential manner, i.e. `503123` will match `503-123-1234`, but not `503-456-1234`"
                    },
                    {
                        "name": "filter[fee_amount_min]",
                        "in": "query",
                        "description": "Reservations with fees that are greater than this value",
                        "type": "number"
                    },
                    {
                        "name": "filter[cancelled_reservation]",
                        "in": "query",
                        "description": "1 for cancelled, 0 for non-cancelled.",
                        "type": "boolean"
                    },
                    {
                        "name": "filter[paid]",
                        "in": "query",
                        "description": "Reservations with paid that are equal than this value.",
                        "type": "number"
                    },
                    {
                        "name": "filter[reservation_types]",
                        "in": "query",
                        "description": "Reservations matching the type(s). More than one may be included if seperated by a `,`. Valid types are 1 for reservation, 2 for Owner hold and 3 for Vacasa Hold",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "enum": [
                            "last_night",
                            "id"
                        ],
                        "description": "A comma seperated list of Reservation attributes to sort data results by."
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "type": "string",
                        "enum": [
                            "metatags",
                            "ownerHoldInfo",
                            "vacasaHoldInfo"
                        ],
                        "description": "A comma-separated list of includes."
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "post": {
                "operationId": "post-reservations",
                "summary": "Create Reservation",
                "tags": [
                    "Reservations"
                ],
                "description": "Requests to this endpoint with a V2 quote ID will use the following data from the V2 quote: unit_id, arrival, departure, adult, children, pets, discount_id, and trip_protection.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [ "attributes", "type" ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["reservations"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "account_number",
                                                "booked_currency_code",
                                                "email",
                                                "exp_mmyy",
                                                "first_name",
                                                "last_name",
                                                "phone",
                                                "quote_id"
                                            ],
                                            "properties": {
                                                "account_number": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "required": [
                                                        "address_1",
                                                        "city",
                                                        "state",
                                                        "zip"
                                                    ],
                                                    "properties": {
                                                        "address_1": {
                                                            "type": "string"
                                                        },
                                                        "address_2": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "description": "ISO-3166 Alpha-2 state code for any US state, or international 'states' are described with their full name a string. **Required if** `data.attributes.address.country_iso` is set to `us` or `US`. "
                                                        },
                                                        "zip": {
                                                            "type": "string",
                                                            "description": "String with up to 10 characters"
                                                        },
                                                        "country_iso": {
                                                            "type": "string",
                                                            "description": "ISO Alpha-2 country code"
                                                        }
                                                    }
                                                },
                                                "anonymous_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "booked_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which the reservation is transacted in."
                                                },
                                                "cancelled": {
                                                    "type": "boolean"
                                                },
                                                "clean_after_stay": {
                                                    "type": "boolean"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "User ID from logins.UserID that gets written to Reservations.CreateBy. For non-zero values, this is the Acquisition Rep's UserID (you can see your UserID on the org chart - https://www.vacasarentals.com/admin/orgchart.php)"
                                                },
                                                "cvv": {
                                                    "type": "string",
                                                    "description": "Card verification value on card"
                                                },
                                                "device_fingerprinting_id": {
                                                    "type": "string"
                                                },
                                                "display_currency_code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "example": "USD, EUR, CAD",
                                                    "description": "Any valid, 3 character ISO-4217 currency code. This is the currency which is preferred by the guest for display purposes."
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "exp_mmyy": {
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "fsc": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": ["credit_account_id", "email", "amount"],
                                                        "properties": {
                                                            "credit_account_id": {
                                                                "type":"string",
                                                                "format": "uuid4"
                                                            },
                                                            "email": {
                                                                "type":"string"
                                                            },
                                                            "amount": {
                                                                "type":"integer"
                                                            }
                                                        }
                                                    }
                                                },
                                                "initial_payment_amount": {
                                                    "type": "number",
                                                    "minimum": 0,
                                                    "description": "* Must be >= 10% of total\n* Only allowed if reservation is > 32 days in the future"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "description": "100 character limit"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "description": "Use this field to provide miscellaneous information about reservation"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "description": "50 character limit"
                                                },
                                                "quote_id": {
                                                    "type": "string",
                                                    "description": "The `id` of a quote retrieved from the `GET /quotes` endpoint"
                                                },
                                                "source": {
                                                    "type": "string",
                                                    "description": "A Vacasa-issued code identifying the source of this request."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    },
                    {
                        "$ref": "#/parameters/trait-xCreateReservationAsyncHeader"
                    }

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reservation-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        }
,
        "/v1/reviews": {
            "get": {
                "operationId": "get-reviews-list",
                "summary": "Get Review List",
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "name": "filter[reservation_id]",
                        "in": "query",
                        "description": "Only Reviews for this Reservation ID",
                        "type": "integer"
                    },
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "description": "Only Reviews for this Unit ID",
                        "type": "integer"
                    },
                    {
                        "name": "filter[modified_date_time_min]",
                        "in": "query",
                        "description": "Only Reviews written at or after this datetime. Must be a valid ISO8601 datetime with timezone. Allowed format is `(YYYY-mm-dd(T)HH:ii:ss(Z OR +-HH:ii)`",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/review-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/states": {
            "get": {
                "operationId": "get-states-list",
                "summary": "Get States List",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional attributes to include.  Options are \"content\".",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/state-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/unit-amenities-reduced": {
            "get": {
                "operationId": "get-unit-amenities-reduced-list",
                "summary": "Get Unit Amenities List (Reduced)",
                "tags": [
                    "Unit Amenities"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-filterable-filter-unit-id"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenities-reduced-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/unit-amenities": {
            "get": {
                "operationId": "get-unit-amenities-list",
                "summary": "Get Unit Amenities List",
                "tags": [
                    "Unit Amenities"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-pageable-page-number"
                    },
                    {
                        "$ref": "#/parameters/trait-pageable-page-limit"
                    },
                    {
                        "$ref": "#/parameters/trait-filterable-filter-unit-id"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "summary": "Create Unit Amenity",
                "tags": [
                    "Unit Amenities"
                ],
                "operationId": "post-unit-amenities",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "attributes",
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["unit-amenities"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "required": [
                                                "amenity_id",
                                                "unit_id"
                                            ],
                                            "properties": {
                                                "amenity_id": {
                                                    "type": ["integer"],
                                                    "description": "32 Bit Unsigned Integer - Values From `1` to `2147483647`"
                                                },
                                                "amenity_value": {
                                                    "type": ["integer", "null"],
                                                    "description": "32 Bit Signed Integer - Values From `-2147483647` to `2147483647`",
                                                    "default": null
                                                },
                                                "internal_notes": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to 16MB, or `16777215` Characters",
                                                    "default": null
                                                },
                                                "instructions": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to `1536` Characters",
                                                    "default": null
                                                },
                                                "notes": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to `255` Characters",
                                                    "default": null
                                                },
                                                "provider_id": {
                                                    "type": ["integer", "null"],
                                                    "description": "32 Bit Unsigned Integer - Values From `1` to `2147483647`",
                                                    "default": null
                                                },
                                                "unit_id": {
                                                    "type": ["integer"],
                                                    "description": "32 Bit Unsigned Integer - Values From `1` to `65355`"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        },
        "/v1/unit-amenities/{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Update Unit Amenity",
                "description": "Update the properties of a Unit Amenity",
                "operationId": "patch-unit-amenities",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "attributes",
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["unit-amenities"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "amenity_value": {
                                                    "type": ["integer", "null"],
                                                    "description": "32 Bit Signed Integer - Values From `-2147483647` to `2147483647`",
                                                    "default": null
                                                },
                                                "internal_notes": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to 16MB, or `16777215` Characters",
                                                    "default": null
                                                },
                                                "instructions": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to `1536` Characters",
                                                    "default": null
                                                },
                                                "notes": {
                                                    "type": ["string", "null"],
                                                    "description": "Up to `255` Characters",
                                                    "default": null
                                                },
                                                "provider_id": {
                                                    "type": ["integer", "null"],
                                                    "description": "32 Bit Unsigned Integer - Values From `1` to `2147483647`",
                                                    "default": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "tags": [
                    "Unit Amenities"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        }
,
        "/v1/unit-amenity-properties": {
            "get": {
                "operationId": "get-unit-amenity-properties",
                "summary": "Get Unit Amenity Properties List",
                "tags": [
                    "Unit Amenity Properties"
                ],
                "parameters": [
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Page number of paginated results",
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Number of entries per page in paginated results",
                        "type": "integer"
                    },
                    {
                        "name": "filter[amenity_id]",
                        "in": "query",
                        "type": "string",
                        "description": "Single or Multiple Amenity IDs, separated by comma"
                    },
                    {
                        "name": "filter[id]",
                        "in": "query",
                        "type": "string",
                        "description": "Single or Multiple Amenity Property IDs, separated by comma"
                    },
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "type": "string",
                        "description": "Single or Multiple Unit IDs, separated by comma"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity-properties-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            },
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "operationId": "create-unit-amenity-properties",
                "summary": "Create Unit Amenity Property",
                "description": "Create a Unit Amenity Property",
                "tags": [
                    "Unit Amenity Properties"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity-property-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["unit-amenity-property"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "amenity_id": {
                                                    "type": "integer"
                                                },
                                                "unit_id": {
                                                    "type": "integer"
                                                },
                                                "idamenities_properties": {
                                                    "type": "integer",
                                                    "description": "The primary key of entry from the amenities_properties table."
                                                },
                                                "property_value": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "amenity_id",
                                                "unit_id",
                                                "idamenities_properties",
                                                "property_value"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                ]
            }
        }
,
        "/v1/unit-amenity-properties/{id}": {
            "patch": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "operationId": "update-unit-amenity-properties",
                "summary": "Update Unit Amenity Property",
                "description": "Update the value of a Unit Amenity Property.",
                "tags": [
                    "Unit Amenity Properties"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-amenity-property-metadata"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["unit-amenity-property"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "property_value": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "property_value"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                ]
            }
        }
,
        "/v1/unit-blocks": {
    "get": {
        "operationId": "get-unit-block-list",
        "summary": "Get Unit Blocks List",
        "tags": [
            "Unit Blocks"
        ],
        "parameters": [
            {
                "name": "filter[unit_id]",
                "in": "query",
                "description": "Comma-delimited list of Unit IDs. May include a comma-seperated list.",
                "type": "string"
            },            {
                "name": "filter[unit_block_type_id]",
                "in": "query",
                "description": "Comma-delimited list of Unit Block Type IDs. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-block-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    },
    "post": {
        "operationId": "create-unit-block-list",
        "summary": "Create Unit Block",
        "tags": [
            "Unit Blocks"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-block"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "required": [
                                        "unit_id",
                                        "unit_block_type_id",
                                        "days_out",
                                        "note"
                                    ],
                                    "properties": {
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "unit_block_type_id": {
                                            "type": "integer",
                                            "description": "The related block type id."
                                        },
                                        "days_out": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 10000
                                        },
                                        "note": {
                                            "type": "string",
                                            "description": "POST string might be empty string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-block-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/unit-blocks/{id}": {
    "get": {
        "operationId": "get-unit-block-by-id",
        "summary": "Get Unit Block by ID",
        "tags": [
            "Unit Blocks"
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-block-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "patch": {
        "operationId": "update-unit-block-by-id",
        "summary": "Update Unit Block",
        "tags": [
            "Unit Blocks"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-block"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "unit_block_type_id": {
                                            "type": "integer",
                                            "description": "The related block type id."
                                        },
                                        "days_out": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 10000
                                        },
                                        "note": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-block-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/unit-events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "unit_id": {
                                                        "type": "integer"
                                                    },
                                                    "event_type": {
                                                        "type": "string"
                                                    },
                                                    "event_origin": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "required": [
                                                    "unit"
                                                ],
                                                "properties": {
                                                    "unit": {
                                                        "type": "object",
                                                        "required": [
                                                            "type",
                                                            "id"
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "id",
                                            "attributes",
                                            "relationships"
                                        ]
                                    }
                                },
                                "included": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "type": "object"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "properties": {
                                                            "photos_list": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "amenities_map": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "meta": {
                                    "$ref": "#/definitions/meta"
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "summary": "Get Unit Events List",
                "operationId": "get-unit-event-list",
                "description": "Gets a list of unit events",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter[event_min]",
                        "type": "integer",
                        "description": "Fetch unit_events by an minimium unit_event_id"
                    },
                    {
                        "in": "query",
                        "name": "filter[unit_id]",
                        "type": "integer",
                        "description": "Search for unit_events by unit ID"
                    },
                    {
                        "in": "query",
                        "name": "filter[created_at_min]",
                        "type": "string",
                        "format": "date-time",
                        "description": "Fetch unit_events by a minimum created_at time."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "type": "string",
                        "enum": [
                            "unit"
                        ],
                        "description": "Include data about the unit.  A comma-delimited list.  Options are `unit`, `unit-content`, `accounting_entity_units` and `unit_overlaps`."
                    },
                    {
                        "in": "query",
                        "name": "include_meta",
                        "type": "string",
                        "enum": [
                            "photos_list",
                            "amenities_map"
                        ],
                        "description": "Send additional meta information related to the units.  May only be sent if the `include` param contains `unit`."
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "tags": [
                    "Units"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/unit-reservation-buffers": {
    "get": {
        "operationId": "get-unit-reservation-buffer-list",
        "summary": "Get Unit Reservation Buffers List",
        "tags": [
            "Unit Reservation Buffers"
        ],
        "parameters": [
            {
                "name": "filter[id]",
                "in": "query",
                "description": "Comma-delimited list of Unit Reservation Buffer IDs. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-reservation-buffer-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    },
    "post": {
        "operationId": "create-unit-reservation-buffer-list",
        "summary": "Create Unit Reservation Buffer",
        "tags": [
            "Unit Reservation Buffers"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-reservation-buffer"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "required": [
                                        "unit_reservation_buffer_id",
                                        "unit_id",
                                        "buffer_days",
                                        "start_date",
                                        "end_date"
                                    ],
                                    "properties": {
                                        "unit_reservation_buffer_id": {
                                            "type": "integer",
                                            "description": "The related unit reservation buffer id."
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "unit_reservation_buffer_reason_id": {
                                            "type": "integer",
                                            "description": "The related unit reservation buffer reason id."
                                        },
                                        "buffer_days": {
                                            "type": "integer"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-reservation-buffer-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/unit-reservation-buffers/{id}": {
    "get": {
        "operationId": "get-unit-reservation-buffer-by-id",
        "summary": "Get Unit Reservation Buffer by ID",
        "tags": [
            "Unit Reservation Buffers"
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-reservation-buffer-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "patch": {
        "operationId": "update-unit-reservation-buffer-by-id",
        "summary": "Update Unit Reservation Buffer",
        "tags": [
            "Unit Reservation Buffers"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-reservation-buffer"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "unit_reservation_buffer_id": {
                                            "type": "integer",
                                            "description": "The related unit reservation buffer id."
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "unit_reservation_buffer_reason_id": {
                                            "type": "integer",
                                            "description": "The related unit reservation buffer reason id."
                                        },
                                        "buffer_days": {
                                            "type": "integer"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-reservation-buffer-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "delete": {
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "integer"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "summary": "Delete Reservation Buffer",
        "description": "Remove a reservation buffer.",
        "tags": [
            "Reservation buffer"
        ],
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/unit-timezone": {
    "get": {
        "operationId": "get-unit-timezone-list",
        "summary": "Get Unit Timezone List",
        "tags": [
            "Unit Timezone"
        ],
        "parameters": [
            {
                "name": "filter[id]",
                "in": "query",
                "description": "Comma-delimited list of Unit Timezone IDs. May include a comma-seperated list.",
                "type": "string"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-timezone-list"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]
    },
    "post": {
        "operationId": "create-unit-timezone-list",
        "summary": "Create Unit Timezone",
        "tags": [
            "Unit Timezone"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-timezone"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "required": [
                                        "unit_timezone_id",
                                        "unit_id",
                                        "timezone"
                                    ],
                                    "properties": {
                                        "unit_timezone_id": {
                                            "type": "integer",
                                            "description": "The related unit timezone id."
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "timezone": {
                                            "type": "string",
                                            "description": "The timezone code."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-timezone-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/unit-timezone/{id}": {
    "get": {
        "operationId": "get-unit-timezone-by-id",
        "summary": "Get Unit Timezone by ID",
        "tags": [
            "Unit Timezone"
        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-timezone-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "patch": {
        "operationId": "update-unit-timezone-by-id",
        "summary": "Update Unit Timezone",
        "tags": [
            "Unit Timezone"
        ],
        "parameters": [
            {
                "in": "body",
                "name": "body",
                "schema": {
                    "type": "object",
                    "required": ["data"],
                    "properties": {
                        "data": {
                            "type": "object",
                            "required": ["attributes", "type"],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["unit-timezone"]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "unit_timezone_id": {
                                            "type": "integer",
                                            "description": "The related unit timezone id."
                                        },
                                        "unit_id": {
                                            "type": "integer",
                                            "description": "The related unit id."
                                        },
                                        "timezone": {
                                            "type": "string",
                                            "description": "The timezone code."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/unit-timezone-single"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    },
    "delete": {
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "integer"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "summary": "Delete Unit Timezone",
        "description": "Remove a unit timezone relationships.",
        "tags": [
            "Unit Timezone"
        ],
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/units/{id}/content": {
            "get": {
                "operationId": "get-unit-content",
                "summary": "Get Content for a Unit",
                "tags": [
                    "Units"
                ],
                "description": "Retrieve a list of localized content for this unit.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/definitions/meta"
                                },
                                "data": {
                                    "$ref": "#/definitions/unit-content-list"
                                },
                                "included": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/related-object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                    
                },
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "type": "integer",
                    "required": true
                }
            ]
        },
        "/v1/units/{id}/photos": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "Resource Object ID (usually the primary key of the URL segment just prior)",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "operationId": "get-photos-by-unit",
                "summary": "Get Photos by Unit",
                "tags": [
                    "Units"
                ],
                "description": "Retrieve a list of photos for a given unit.\n\nThe photos are sorted by image_rank in ascending order.",
                "parameters": [
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photo-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/v1/units/{id}": {
            "get": {
                "operationId": "get-unit-by-id",
                "summary": "Get Unit by ID",
                "tags": [
                    "Units"
                ],
                "description": "Retrieve a single unit by its primary identifier.",
                "parameters": [
                    {
                        "name": "include_meta",
                        "in": "query",
                        "description": "Request additional custom attributes be returned in 'meta' object on the Unit resource.\n\nSupported value: 'photos_list' (returns array of photo URLs is default ASC order)",
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Comma-separated list of resources to include.",
                        "type": "string",
                        "enum": [
                            "unit_overlaps",
                            "content",
                            "accounting_entity_units"
                        ]
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "Retrieve a single unit",
                        "schema": {
                            "$ref": "#/definitions/unit-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "summary": "Update Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "integer",
                                                    "description": "The active status of the unit.
                                                    \n`0` => `Inactive`
                                                    \n`1` => `Active` (May not be active until the unit has an associated accounting entity)
                                                    \n`2` => `Maintenance`",
                                                    "enum": [0, 1, 2]
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address_1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "description": "This field is not required, however the validations and logic around this field influence the value of `CityID`, `RegionID`, and `CountyID/Code`.
                                                                If you update this field, and it is not valid in relation to `address.state`, you will recieve validation errors. Additionally, it cannot be patched to an empty string or removed."
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "description": "This field is not required, however the validations and logic around this field influence the value of `StateID`, `RegionID`, and `CountyID/Code`.
                                                                If you update this field, and it is not valid in relation to `address.city`, you will recieve validation errors. Additionally, it cannot be patched to an empty string or removed."
                                                        },
                                                        "zip": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                },
                                                "address_confirmed": {
                                                    "type": "boolean"
                                                },
                                                "bathrooms": {
                                                    "type": "object",
                                                    "properties": {
                                                        "full_baths": {
                                                            "type": "integer"
                                                        },
                                                        "half_baths": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                },
                                                "bedrooms": {
                                                    "type": "integer"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of whomever created the Unit. Max length of 10 characters."
                                                },
                                                "custom_coordinates": {
                                                    "type": "integer",
                                                    "enum": [0, 1]
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Maximum length of 16,000 Characters"
                                                },
                                                "description2": {
                                                    "type": "string",
                                                    "description": "Maximum length of 16,000 Characters"
                                                },
                                                "display": {
                                                    "type": "boolean",
                                                    "description": "Whether or not to display the unit. AKA 'copy ready'. May not be true until the unit has an associated accounting entity."
                                                },
                                                "driving_directions": {
                                                    "type": "string"
                                                },
                                                "finance_reporting_location_code": {
                                                    "type": "string",
                                                    "description": "The finance_reporting_location.code active for the unit"
                                                },
                                                "housing_type": {
                                                    "type": "string"
                                                },
                                                "local_operations_manager": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of the local operations manager."
                                                },
                                                "max_occupancy": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "notes_for_copywriters": {
                                                    "type": "string"
                                                },
                                                "regional_director": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of the regional operations director."
                                                },
                                                "unit_booking_compliance": {
                                                    "type": "object",
                                                    "properties": {
                                                        "display_public_permit_id": {
                                                            "type": "boolean"
                                                        },
                                                        "display_public_tax_id": {
                                                            "type": "boolean"
                                                        },
                                                        "min_booking_age": {
                                                            "type": "integer"
                                                        },
                                                        "permitting_effective_date": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "permit_renewal_date": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "property_permit_id": {
                                                            "type": "string"
                                                        },
                                                        "property_tax_id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "vacasa_contact_id": {
                                                    "type": "integer",
                                                    "description": "ID of the Vacasa Contact. Must be an integer, a valid `logins.ID` and cannot exceed 10 digits."
                                                },
                                                "warning_email": {
                                                    "type": "string"
                                                },
                                                "parking_total_cars": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "amenities_map": {
                                                    "type": "object",
                                                    "properties": {
                                                        "AmenityName": {
                                                            "type": "integer",
                                                            "description": "Any valid AmenityName from the `amenities` table will work here, as well as an integer to populate the `amenity_value` field"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }
                ],
                "description": "Update certain Attributes, or any Amenity/Feature of a Unit",
                "operationId": "update-unit",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        }
,
        "/v1/units": {
            "get": {
                "operationId": "get-unit-list",
                "summary": "Get Unit List",
                "tags": [
                    "Units"
                ],
                "description": "Retrieve a paginated list of units.",
                "parameters": [
                    {
                        "name": "filter[active]",
                        "in": "query",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "description": "`0`: Inactive `1`: Active `2`: Maintenance Only"
                    },
                    {
                        "name": "filter[display]",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "filter[terminated]",
                        "in": "query",
                        "type": "integer",
                        "enum": [
                            0,
                            -1,
                            1
                        ],
                        "description": "`0`: Not Terminated `-1`: Termination Pending `1`: Terminated"
                    },
                    {
                        "name": "filter[local_operations_manager]",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "filter[code]",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Page number of paginated results",
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Number of entries per page in paginated results",
                        "type": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by one or more attributes.  Separate attributes with commas.  They will be sorted in the order set in the value.  Default ordering is ascending.  To add descending ordering, prepend attribute name with `-`.\n\nSee [http://jsonapi.org/format/#fetching-sorting](http://jsonapi.org/format/#fetching-sorting) for examples.",
                        "type": "string"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Comma separated list of related resources to include.",
                        "type": "string",
                        "enum": [
                            "content",
                            "unit_overlaps",
                            "accounting_entity_units"
                        ]
                    },
                    {
                        "name": "include_meta",
                        "in": "query",
                        "description": "Request additional custom attributes be returned in 'meta' object on each Unit resource via a comma separated list\n\nSupported values:\n 'photos_list' (returns array of photo URLs is default ASC order)\n'amenities_map' (returns json object of key:value amenities map)",
                        "type": "string"
                    },
                    {
                        "name": "filter[amenities]",
                        "in": "query",
                        "description": "key/value array to filter units by available amenities. multiple amenities can be provided.\n\nIf a value is not provided, it will default to a value of 1\n\nex: filter[amenities][internet]=1\n\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[occupancy_min]",
                        "in": "query",
                        "description": "Filter units by 'max_occupancy'. Returns units where 'max_occupancy' >= filter value.\n\nAlso provide filters for 'adults_min' and 'children_min' to filter more precisely for units meeting all three criteria. The value of filter[occupancy_min] should be equal to filter[adults_min] + filter[children_min].\n\nEx.: filter[adults_min]=10&filter[children_min]=2&filter[occupancy_min]=12",
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "filter[adults_min]",
                        "in": "query",
                        "description": "Filter units by 'max_adults'. Returns units where 'max_adults' >= filter value",
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "filter[children_min]",
                        "in": "query",
                        "description": "Filter units by 'max_children'. Returns units where 'max_children' >= filter value",
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "filter[geo_bounds]",
                        "in": "query",
                        "description": "## Define either a bounding box or a bounding circle within which to find units.\n\n**IMPORTANT:**\n`[box]` and `[circle]` parameters cannot be used together. Please choose one or the other.\n\n`filter[geo_bounds][box]` (`string`)\n\n* Define the latitude/longitude coordinates of the southwest and northeast corners of a bounding box within which to find units.\n* Separate the coordinate sets with a pipe (|), like so: `swLat,swLng|neLat,neLng`\n\n_Example:_\n`filter[geo_bounds][box]=24.586431285153,-81.607737391021|24.760098714847,-81.416621608979`\n\n---\n\n`filter[geo_bounds][circle]` (`array` containing two or three `string` items)\n\n* Define the center point and radius of a bounding circle within which to find units.\n* Provide the latitude/longitude coordinates for the center point as comma-separated values with the key `[center_point]`, and the radius with the key `[radius]`. The default unit of measurement for the radius value is kilometers, but you may specify miles instead by providing the key `[unit_measurement]` with a value of `mi`.\n* `[center_point]` and`[radius]` are **required**, while `[unit_measurement]` is **optional**.\n\n_Example:_\n`filter[geo_bounds][circle][center_point]=24.673265,-81.5121795&filter[geo_bounds][circle][radius]=5&filter[geo_bounds][circle][unit_measurement]=mi`",
                        "type": "array",
                        "items": {
                            "type": "number",
                            "items": {}
                        }
                    },
                    {
                        "name": "filter[check_in_date]",
                        "in": "query",
                        "description": "Filter units by availability. Required if filter[check_out_date] is provided",
                        "type": "string"
                    },
                    {
                        "name": "filter[check_out_date]",
                        "in": "query",
                        "description": "Filter units by availability. Required if filter[check_in_date] is provided",
                        "type": "string"
                    },
                    {
                        "name": "filter[updated_at_min]",
                        "in": "query",
                        "description": "An ISO-8601 date.  Units returned will have an `updated_at` property of this date-time or greater.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "filter[unit_id]",
                        "in": "query",
                        "type": "string",
                        "description": "Comma-delimited list of unit IDs"
                    },
                    {
                        "in": "query",
                        "name": "filter[country]",
                        "type": "string",
                        "description": "Filter units by ISO-3166-1 Alpha-2 country code\n\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n\nexample: US"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-list"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/unit-single"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": ["units"]
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "acquisition_id": {
                                                    "type": "integer",
                                                    "description": "A valid primary key for an acquisition."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address_1": {
                                                            "type": "string"
                                                        },
                                                        "address_2": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "description": "The value of this field influence the values of other location fields for a Unit (`CityID`, `RegionID`, `CountryID/Code`), so while this field may be populated with a valid `City`, it must also be valid in relation to `address.state` (i.e. Where there is the given `city`, there is an associated `state`)"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "description": "The value of this field influence the values of other location fields for a Unit (`StateID`, `RegionID`, `CountryID/Code`), so while this field may be populated with a valid `State`, it must also be valid in relation to `address.city` (i.e. Where there is the given `state`, there is an associated `city`)"
                                                        },
                                                        "zip": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "city",
                                                        "state",
                                                        "zip"
                                                    ]
                                                },
                                                "address_confirmed": {
                                                    "type": "boolean",
                                                    "default": false
                                                },
                                                "amenity_email": {
                                                    "type": "string",
                                                    "description": "Selected from hardcoded list of email addresses in Admin source code, corresponds to “Send Amenity Request Email to” on Listing tab for a unit, e.g., [https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967](https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967)."
                                                },
                                                "bathrooms": {
                                                    "type": "object",
                                                    "properties": {
                                                        "full_baths": {
                                                            "type": "integer"
                                                        },
                                                        "half_baths": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "full_baths",
                                                        "half_baths"
                                                    ]
                                                },
                                                "bedrooms": {
                                                    "type": "integer"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "description": "Unit code, alternate unique identifier for a unit, e.g. “NYFI16-OBV” for [https://www.vacasa.com/admin/dashboard/units/edit?UnitID=2196](https://www.vacasa.com/admin/dashboard/units/edit?UnitID=2196)."
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of whomever created the Unit. Max length of 10 characters."
                                                },
                                                "custom_coordinates": {
                                                    "type": "integer",
                                                    "enum": [0, 1]
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Maximum length of 16,000 Characters"
                                                },
                                                "description2": {
                                                    "type": "string",
                                                    "description": "Maximum length of 16,000 Characters"
                                                },
                                                "driving_directions": {
                                                    "type": "string"
                                                },
                                                "housing_type": {
                                                    "type": "string",
                                                    "description": "Effective foreign key to table Codes with CodeTypeId = 2, corresponds to “Housing Type” on Listing tab for a unit, e.g., [https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967](https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967)"
                                                },
                                                "latitude": {
                                                    "type": "number"
                                                },
                                                "local_operations_manager": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of the local operations manager."
                                                },
                                                "longitude": {
                                                    "type": "number"
                                                },
                                                "max_occupancy": {
                                                    "type": "integer"
                                                },
                                                "m_source": {
                                                    "type": "string",
                                                    "description": "Effective foreign key to table Codes with CodeTypeId = 3, corresponds to “Source” on Listing tab for a unit, e.g., [https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967](https://www.vacasa.com/admin/dashboard/units/listing?UnitID=21967)."
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "notes_for_copywriters": {
                                                    "type": "string"
                                                },
                                                "regional_director": {
                                                    "type": "integer",
                                                    "description": "The `logins.UserID` of the regional operations director."
                                                },
                                                "secured_by": {
                                                    "type": "integer",
                                                    "description": "The UserID of whomever secured this unit."
                                                },
                                                "turnover_day": {
                                                    "type": "integer",
                                                    "description": "Corresponds to 'Fixed Turnover' on Rates tab for a unit, e.g., https://www.vacasa.com/admin/dashboard/units/rates?UnitID=21967.
                                                    \n\n`1` => `Sunday`
                                                    \n`2` => `Monday`
                                                    \n`3` => `Tuesday`
                                                    \n`4` => `Wednesday`
                                                    \n`5` => `Thursday`
                                                    \n`6` => `Friday`
                                                    \n`7` => `Saturday`"
                                                },
                                                "unit_booking_compliance": {
                                                    "type": "object",
                                                    "properties": {
                                                        "display_public_permit_id": {
                                                            "type": "boolean"
                                                        },
                                                        "display_public_tax_id": {
                                                            "type": "boolean"
                                                        },
                                                        "min_booking_age": {
                                                            "type": "integer"
                                                        },
                                                        "permitting_effective_date": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "permit_renewal_date": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "property_permit_id": {
                                                            "type": "string"
                                                        },
                                                        "property_tax_id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "vacasa_contact_id": {
                                                    "type": "integer",
                                                    "description": "ID of the Vacasa Contact. Must be an integer, a valid `logins.ID` and cannot exceed 10 digits."
                                                },
                                                "warning_email": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "address",
                                                "housing_type",
                                                "bathrooms",
                                                "bedrooms",
                                                "secured_by"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "amenities_map": {
                                                    "type": "object",
                                                    "properties": {
                                                        "AmenityName": {
                                                            "type": "integer",
                                                            "description": "Any valid AmenityName from the `amenities` table will work here, as well as an integer to populate the `amenity_value` field"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                ],
                "summary": "Create Unit",
                "description": "Creates a new unit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "security": [
                    {
                        "Auth": []
                    }
                ]            }
        }
,
        "/v1/users-roles": {
    "get": {
        "operationId": "get-users-roles-list",
        "summary": "Get Users and Roles Relations List",
        "tags": [
            "Users Roles"
        ],
        "parameters": [
            {
                "name": "userId[active]",
                "in": "query",
                "description": "Filter results by user id",
                "type": "integer"
            },
            {
                "name": "roleId[active]",
                "in": "query",
                "description": "Filter results by role id",
                "type": "integer"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/users-roles"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
,
        "/v1/users-roles/user-with-permission": {
    "get": {
        "operationId": "get-users-with-permission",
        "summary": "Get the Users with permission",
        "tags": [
            "Users Roles"
        ],
        "parameters": [
            {
                "name": "permissionId[active]",
                "in": "query",
                "description": "Find user with the permission set through a Role",
                "type": "integer"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-number"
            },
            {
                "$ref": "#/parameters/trait-pageable-page-limit"
            },
            {
                        "$ref": "#/parameters/trait-localizable-Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/trait-authorizationHeader"
                    },
                    {
                        "$ref": "#/parameters/trait-jsonApiContentTypeHeader-Content-Type"
                    },
                    {
                        "$ref": "#/parameters/trait-localizable-X-Accept-Timezone"
                    }        ],
        "responses": {
            "200": {
                "description": "OK",
                "schema": {
                    "$ref": "#/definitions/users-with-permission"
                }
            },
            "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation-error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/standard-error"
                        }
                    }        },
        "security": [
                    {
                        "Auth": []
                    }
                ]    }
}
    }
,
    "parameters": {
        "trait-authorizationHeader": {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "default": "Bearer {token}",
            "required": true
        },
        "trait-dateRange-filter[start_date]": {
            "name": "filter[start_date]",
            "in": "query",
            "type": "string",
            "format": "date"
        },
        "trait-dateRange-filter[end_date]": {
            "name": "filter[end_date]",
            "in": "query",
            "type": "string",
            "format": "date"
        },
        "trait-dateRangeRequired-filter[start_date]": {
            "name": "filter[start_date]",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
        },
        "trait-dateRangeRequired-filter[end_date]": {
            "name": "filter[end_date]",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
        },
        "trait-filterable-filter-unit-id": {
            "description": "Filters results by given Unit ID(s)",
            "in": "query",
            "format": "One or more Unit IDs, separated by comma",
            "name": "filter[unit_id]",
            "type": "string"
        },
        "trait-jsonApiContentTypeHeader-Content-Type": {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/vnd.api+json"
        },
        "trait-localizable-Accept-Language": {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language you will accept.  If no localized content can be found, an error response is returned.  Allowed format is `[ISO-639-1 Code]-[ISO 3166-1 Alpha-2 Code]`.",
            "required": false,
            "type": "string",
            "default": "en-US",
            "pattern": "^([a-z]){2}-([a-z]{2})*$"
        },
        "trait-localizable-X-Accept-Timezone": {
            "name": "X-Accept-Timezone",
            "in": "header",
            "description": "`UTC` or a long-form version of a timezone from the [tz database](http://www.twinsun.com/tz/tz-link.htm).  See [TZ Database Time Zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) on Wikipedia.  Examples: `America/Aruba` `America/Argentina/San_Juan`",
            "required": false,
            "type": "string",
            "default": "Europe/London"
        },
        "trait-pageable-page-number": {
            "name": "page[number]",
            "in": "query",
            "description": "Page number of paginated results",
            "required": false,
            "type": "integer"
        },
        "trait-pageable-page-limit": {
            "name": "page[limit]",
            "in": "query",
            "description": "Number of entries per page in paginated results",
            "required": false,
            "type": "integer"
        },
        "trait-sortable-sort": {
            "name": "sort",
            "in": "query",
            "description": "Sort by one or more attributes.  Separate attributes with commas.  They will be sorted in the order set in the value.  Default ordering is ascending.  To add descending ordering, prepend attribute name with `-`.\n\nSee [http://jsonapi.org/format/#fetching-sorting](http://jsonapi.org/format/#fetching-sorting) for examples.",
            "required": false,
            "type": "string"
        },
        "trait-xCreateReservationAsyncHeader": {
            "default": "FALSE",
            "description": "Feature flag to indicate that this Reservation should be created with asynchronous processing",
            "in": "header",
            "name": "X-Create-Reservation-Async",
            "required": false,
            "type": "boolean"
        },
        "trait-xReadFromMasterHeader": {
            "description": "Feature flag to indicate that this Reservation should be queried on the master database connection. This header's value must be `TRUE` in order to read from master.",
            "in": "header",
            "name": "X-Read-From-Master",
            "required": false,
            "type": "string"
        }
    }
,
    "definitions": {
        "accounting-entity-unit": {
    "title": "Accounting Entity Unit",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["accounting_entity_units"]
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "accounting_entity_id": {
                    "type": "integer"
                },
                "accounting_entity_name": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "unit_id": {
                    "type": "integer"
                },
                "mailing_address": {
                    "type": "string"
                },
                "tax_id": {
                    "type": "integer"
                }
            }
        }
    }
}
,
        "accounting-entity-unit-list": {
    "title": "Accounting Entity Unit List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/accounting-entity-unit"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "accounting-entity-unit-single": {
    "title": "Accounting Entity Unit Single",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "$ref": "#/definitions/accounting-entity-unit"
        }
    }
}
,
        "account-list": {
            "title": "Account List",
            "type": "array",
            "items": {
                "$ref": "#/definitions/account"
            }
        },
        "account": {
            "title": "Account",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "descriptor": {
                    "type": "string"
                },
                "primary_contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                }
            }
        },
        "active": {
            "title": "Active",
            "type": "integer",
            "description": "`0`:  Inactive `1`: Active `2`: Maintenance Only",
            "enum": [
                0,
                1,
                2
            ]
        },
        "acquisition": {
    "title": "Acquisition",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "effective_date": {
                    "type": [
                        "string"
                    ],
                    "format": "date-time"
                },
                "created_at": {
                    "type": [
                        "string"
                    ],
                    "format": "date-time"
                },
                "deleted_at": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time"
                },
                "created_by": {
                    "type": "integer"
                },
                "deleted_by": {
                    "type": [
                        "integer",
                        "null"
                    ]
                }
            }
        }
    }
}
,
        "acquisition-list": {
    "title": "Acquisition List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/acquisition"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "address": {
            "title": "Address",
            "type": "object",
            "properties": {
                "address_1": {
                    "type": "string"
                },
                "address_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        }
                    }
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "adjustment-policy": {
            "x-oneOf": [
                {
                    "$ref": "#/definitions/adjust-pet-policy"
                },
                {
                    "$ref": "#/definitions/cancel-reservation-policy"
                }
            ]
        }
,
        "adjust-pet-policy": {
            "type": "object",
            "required": [
                "policy_info"
            ],
            "properties": {
                "policy_info": {
                    "type": "object",
                    "required": [
                            "policy_type",
                            "pet_count"
                        ],
                    "properties": {
                        "policy_type": {
                            "type": "string",
                            "enum": ["adjust-pet"]
                        },
                        "pet_count": {
                            "type": "integer",
                            "description": "Number of pets",
                            "example": 2
                        }
                    }
                }
            }
        }
,
        "amenity-event-list": {
            "type": "object",
            "title": "Amenity Event List",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "created_at": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "event_origin": {
                                        "type": "string"
                                    },
                                    "event_type": {
                                        "type": "string"
                                    },
                                    "foreign_id": {
                                        "type": "integer",
                                        "description": "`id` of table `amenities` or related table."
                                    },
                                    "option_value": {
                                        "type": "integer",
                                        "description": "Value from table `amenities_option` or table `amenities_properties_options`."
                                    }
                                }
                            },
                            "relationships": {
                                "type": "object",
                                "description": "One and only one of these relationships will contain non-null data.",
                                "properties": {
                                    "amenity": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "amenity-category": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "amenity-group": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "amenity-option": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "amenity-property": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "amenity-property-option": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "description": "Attributes will vary, depending on type."
                            }
                        }
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "amenity-group-list": {
            "title": "Amenity Group List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amenity-group"
                    }
                }
            }
        },
        "amenity-group-single": {
            "title": "Amenity Group Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/amenity-group"
                }
            }
        },
        "amenity-group": {
            "title": "Amenity Group",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "group_name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "amenity-list": {
            "title": "Amenity List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amenity"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "amenity-single": {
            "title": "Amenity Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/amenity"
                }
            }
        },
        "amenity": {
            "title": "Amenity",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "category": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "group_id": {
                            "type": "number"
                        },
                        "group_type": {
                            "type": "string"
                        },
                        "icon_path": {
                            "type": "string"
                        },
                        "is_public": {
                            "type": "boolean"
                        },
                        "is_search_filter": {
                            "type": "boolean"
                        },
                        "is_shared": {
                            "type": "boolean"
                        },
                        "marketing_value": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "show_provider": {
                            "type": "integer"
                        },
                        "value_type": {
                            "type": "string"
                        }
                    }
                },
                "included": {
                    "type": "object",
                    "properties": {
                        "options": {
                            "type": "array",
                            "description": "returned if ?include=options is present",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "amenity_id": {
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "type": "integer"
                                    },
                                    "display": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "categories": {
                            "type": "array",
                            "description": "returned if ?include=categories is present",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "content": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "language_id": {
                                        "type": "integer"
                                    },
                                    "display_name": {
                                        "type": "string"
                                    },
                                    "group_type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "amenity-property": {
            "title": "Amenity Property",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "amenity_id": {
                            "type": "string"
                        },
                        "field_type": {
                            "type": "string"
                        },
                        "property_name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "amenity-property-list": {
            "title": "Amenity Property List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amenity-property"
                    }
                }
            }
        }
,
        "AuthLogin": {
            "title": "Auth Login",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "api_key",
                        "timestamp",
                        "signature"
                    ],
                    "properties": {
                        "api_key": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "integer"
                        },
                        "signature": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "data"
            ],
            "example": {
                "data": {
                    "api_key": "ullamco aute irure",
                    "timestamp": -44752597,
                    "signature": "exercitation Ut aliquip reprehe"
                }
            }
        },
        "auth-refresh": {
            "title": "Auth Refresh",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "refresh_token"
                    ],
                    "properties": {
                        "refresh_token": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "data"
            ],
            "example": {
                "data": {
                    "refresh_token": "ipsum qui"
                }
            }
        },
        "auth-single": {
            "title": "Auth Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth"
                }
            }
        },
        "auth": {
            "title": "Auth",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "object",
                            "required": [
                                "expires_at",
                                "token"
                            ],
                            "properties": {
                                "expires_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        },
                        "refresh_token": {
                            "type": "object",
                            "description": "",
                            "required": [
                                "expires_at",
                                "token"
                            ],
                            "properties": {
                                "expires_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": [
                        "access_token",
                        "refresh_token"
                    ]
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "availability-list": {
            "title": "Availability List",
            "type": "object",
            "example": {
                "meta": {
                    "validation": {},
                    "total_pages": "Duis et id ad aute"
                },
                "links": {
                    "self": "https://loy.net",
                    "related": "http://jabari.com",
                    "first": "http://hildegard.net",
                    "last": "http://jackson.net",
                    "prev": "https://linda.com",
                    "next": "http://tiffany.net"
                },
                "data": [
                    {
                        "unit_id": "mollit pariatur nostrud laboris",
                        "email": "consequat ut elit nisi fugiat",
                        "first_name": "dolor",
                        "address": {
                            "address_1": "cillum ut",
                            "address_2": "consequat laborum",
                            "city": "voluptate",
                            "state": "exercita",
                            "country": {
                                "id": "ut aliqua dolor",
                                "name": "deserunt",
                                "code": "deserunt est exercitation"
                            },
                            "zip": "nulla aliquip velit"
                        }
                    },
                    {},
                    {
                        "phone": "pariatur sed amet minim magna",
                        "type": 8577123
                    },
                    {
                        "address": {
                            "address_1": "qui dolor",
                            "address_2": "do",
                            "city": "nulla nostrud pariatur sint dolore",
                            "state": "dolor cupidatat ullamco",
                            "country": {
                                "id": "nulla Lorem eiusmod officia consectetur",
                                "name": "enim id occaecat sit",
                                "code": "occaecat"
                            },
                            "zip": "qui"
                        },
                        "phone": "est aliquip nulla"
                    }
                ],
                "included": [
                    {
                        "data": [
                            {
                                "id": 7192450,
                                "type": "voluptate et"
                            },
                            {
                                "id": 55260624,
                                "type": "adipisicing ullamco"
                            },
                            {
                                "id": -8005375,
                                "type": "aliquip laboris"
                            },
                            {
                                "id": 14990571,
                                "type": "nostrud do officia irure ut"
                            }
                        ]
                    },
                    {
                        "links": {
                            "self": "https://shana.com",
                            "related": "https://ciara.name",
                            "first": "http://devan.org",
                            "last": "https://kathryn.net",
                            "prev": "http://meta.name",
                            "next": "https://wilson.biz"
                        }
                    },
                    {}
                ],
                "errors": [
                    {
                        "status": "esse tempor commodo",
                        "title": "exercitation Duis i"
                    },
                    {
                        "status": "aute",
                        "title": "ut Excepteur sed"
                    }
                ]
            },
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/availability"
                    }
                }
            }
        },
        "availability-single": {
            "title": "Availability Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/availability"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/standard-error"
                    }
                }
            },
            "example": {
                "meta": {
                    "validation": {},
                    "total_pages": "Duis et id ad aute"
                },
                "links": {
                    "self": "https://loy.net",
                    "related": "http://jabari.com",
                    "first": "http://hildegard.net",
                    "last": "http://jackson.net",
                    "prev": "https://linda.com",
                    "next": "http://tiffany.net"
                },
                "data": [
                    {
                        "unit_id": "mollit pariatur nostrud laboris",
                        "email": "consequat ut elit nisi fugiat",
                        "first_name": "dolor",
                        "address": {
                            "address_1": "cillum ut",
                            "address_2": "consequat laborum",
                            "city": "voluptate",
                            "state": "exercita",
                            "country": {
                                "id": "ut aliqua dolor",
                                "name": "deserunt",
                                "code": "deserunt est exercitation"
                            },
                            "zip": "nulla aliquip velit"
                        }
                    },
                    {},
                    {
                        "phone": "pariatur sed amet minim magna",
                        "type": 8577123
                    },
                    {
                        "address": {
                            "address_1": "qui dolor",
                            "address_2": "do",
                            "city": "nulla nostrud pariatur sint dolore",
                            "state": "dolor cupidatat ullamco",
                            "country": {
                                "id": "nulla Lorem eiusmod officia consectetur",
                                "name": "enim id occaecat sit",
                                "code": "occaecat"
                            },
                            "zip": "qui"
                        },
                        "phone": "est aliquip nulla"
                    }
                ],
                "included": [
                    {
                        "data": [
                            {
                                "id": 7192450,
                                "type": "voluptate et"
                            },
                            {
                                "id": 55260624,
                                "type": "adipisicing ullamco"
                            },
                            {
                                "id": -8005375,
                                "type": "aliquip laboris"
                            },
                            {
                                "id": 14990571,
                                "type": "nostrud do officia irure ut"
                            }
                        ]
                    },
                    {
                        "links": {
                            "self": "https://shana.com",
                            "related": "https://ciara.name",
                            "first": "http://devan.org",
                            "last": "https://kathryn.net",
                            "prev": "http://meta.name",
                            "next": "https://wilson.biz"
                        }
                    },
                    {}
                ],
                "errors": [
                    {
                        "status": "esse tempor commodo",
                        "title": "exercitation Duis i"
                    },
                    {
                        "status": "aute",
                        "title": "ut Excepteur sed"
                    }
                ]
            }
        },
        "availability": {
            "title": "Availability",
            "type": "object",
            "description": "JsonAPI Resource Object",
            "example": {
                "type": "id velit proident dolore",
                "id": "Excepteur esse",
                "attributes": {
                    "date": "4919-03-03",
                    "min_stay_discount_days": 73773552,
                    "min_stay_discount_percent": -12376278,
                    "tax_rate": 83074913,
                    "rate": 1068768,
                    "unit_id": 18342403,
                    "created_at": "2137-12-17T07:47:34.991Z",
                    "updated_at": "4067-12-26T07:45:26.495Z",
                    "turnover": 67733091,
                    "": "aliqua velit quis"
                }
            },
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "required": [
                        "date",
                        "turnover"
                    ],
                    "properties": {
                        "available": {
                            "type": "boolean",
                            "description": "True if the following conditions are met:\n1. There are no conflicting reservations\n2. There is a non-zero rate"
                        },
                        "base_guests": {
                            "type": "integer"
                        },
                        "clean_end": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "date": {
                            "type": "string",
                            "format": "date"
                        },
                        "days_available": {
                            "type": "integer",
                            "description": "Must be non-zero for a unit to be bookable"
                        },
                        "daily_cleaning_rate": {
                            "type": "number"
                        },
                        "days_prior": {
                            "type": "integer"
                        },
                        "min_stay": {
                            "type": "integer"
                        },
                        "min_stay_discount_days": {
                            "type": "integer"
                        },
                        "min_stay_discount_percent": {
                            "type": "integer"
                        },
                        "rate": {
                            "type": "integer",
                            "description": "Must be non-zero for a unit to be bookable"
                        },
                        "reservation_id": {
                            "type": "integer"
                        },
                        "tax_rate": {
                            "type": "integer"
                        },
                        "turnover": {
                            "type": "integer"
                        },
                        "unit_id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            },
            "required": [
                "type",
                "id",
                "attributes"
            ]
        }
,
        "blocklist-list": {
            "title": "Blocklist List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blocklist"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "blocklist-single": {
            "title": "Blocklist Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/blocklist"
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "blocklist": {
            "title": "Blocklist",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "block": {
                            "type": "integer"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date"
                        },
                        "deleted_at": {
                            "type": "string",
                            "format": "date"
                        },
                        "email": {
                            "type": "string",
                            "format": "email"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "reason": {
                            "type": "string"
                        },
                        "reservation_id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date"
                        },
                        "warn": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "cancel-reservation-policy": {
            "type": "object",
            "required": [
                "policy_info"
            ],
            "properties": {
                "policy_info": {
                    "type": "object",
                    "required": ["policy_type"],
                    "properties": {
                        "policy_type": {
                            "type": "string",
                            "enum": ["cancel-reservation"]
                        },
                        "force_zero": {
                            "type": "boolean",
                            "enum": [true]
                        }
                    }
                }
            }
        }
,
        "city-list": {
            "title": "City List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/city"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/standard-error"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "code": {
    "title": "Code",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "code_type_id": {
                    "type": "integer"
                },
                "short_name": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "long_name": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "description": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "start_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time"
                },
                "end_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time"
                }
            }
        }
    }
}
,
        "code-list": {
    "title": "Code List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/code"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "code-type": {
    "title": "Code Type",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["code_type"]
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "code_type": {
                    "type": "string"
                },
                "description": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "start_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time"
                },
                "end_date": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time"
                }
            }
        }
    }
}
,
        "code-type-list": {
    "title": "CodeType List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/code-type"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "city": {
            "title": "City",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean"
                        },
                        "city": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "state_id": {
                            "type": "integer"
                        },
                        "region": {
                            "type": "string"
                        },
                        "region_id": {
                            "type": "integer"
                        },
                        "country_name": {
                            "type": "string"
                        },
                        "country_id": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "contact-list": {
            "type": "object",
            "title": "Contact List",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "contact-single": {
            "type": "object",
            "title": "Contact Single",
            "properties": {
                "data": {
                    "$ref": "#/definitions/contact"
                }
            }
        },
        "contact": {
            "title": "Contact",
            "type": "object",
            "example": {
                "id": "Excepteur esse nisi adipisicing veniam",
                "first_name": "eius",
                "last_name": "dolore magna",
                "display_name": "minim commodo",
                "email": "ad sed dolore"
            },
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "account_type": {
                            "type": "string"
                        },
                        "address_1": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "address_2": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "city": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "created_by": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "email": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "first_name": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "language_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "last_name": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "phone": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "phone_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "state": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "tax_entity_name": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "tax1099_email_optout": {
                            "type": [
                                "number"
                            ]
                        },
                        "currency_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "accounting_entity_country": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "updated_at": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "updated_by": {
                            "type": [
                                "null",
                                "integer"
                            ]
                        },
                        "zip": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        "contract-list": {
            "title": "Contract List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contract"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "contract-owner": {
            "title": "Contract Owner",
            "type": "object",
            "properties": {
                "owners_id": {
                    "type": "integer"
                },
                "percentage_ownership": {
                    "type": "string"
                },
                "tax_ownership": {
                    "type": "string"
                }
            }
        },
        "contract": {
            "title": "Contract",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "amendment_by_notice_id": {
                            "type": "integer"
                        },
                        "channel_fee_cost_sharing_id": {
                            "type": "integer"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "end_date": {
                            "type": "string",
                            "format": "date"
                        },
                        "form_id": {
                            "type": "integer"
                        },
                        "management_fee_fixed": {
                            "type": "number"
                        },
                        "management_fee_percentage": {
                            "type": "number"
                        },
                        "owners": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contract-owner"
                            }
                        },
                        "referral_discount": {
                            "type": "number"
                        },
                        "referral_eligible": {
                            "type": "boolean"
                        },
                        "start_date": {
                            "type": "string",
                            "format": "date"
                        },
                        "template_version_id": {
                            "type": "integer"
                        },
                        "unit_id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "receipt_based_processing": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "receipt_based_max_percentage": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "receipt_based_sameyear_payout": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "revenue_pooling": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        }
                    }
                }
            }
        }
,
        "contract-amendment-by-notice": {
            "title": "ContractAmendmentByNotice",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "format": "snake_case"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "contract-amendment-by-notices-list": {
            "title": "Contract Amendment By Notices List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contract-amendment-by-notice"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        }
,
        "contract-channel-fee-cost-sharing": {
            "title": "ContractChannelFeeCostSharing",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "format": "snake_case"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "contract-channel-fee-cost-sharings-list": {
            "title": "Contract Channel Fee Cost Sharings List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contract-channel-fee-cost-sharing"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        }
,
        "contract-form": {
            "title": "ContractForm",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "format": "snake_case"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "contract-form-list": {
            "title": "Contract Form List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contract-form"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        }
,
        "contract-template-version": {
            "title": "ContractTemplateVersion",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "format": "snake_case"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "contract-template-version-list": {
            "title": "Contract Template Versions List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contract-template-version"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        }
,
        "country-extended-list": {
            "title": "Country Extended List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/country-extended"
                    }
                }
            }
        },
        "country-extended": {
            "title": "Country Extended",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "abbr": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean"
                        },
                        "custom_meta_desc": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "keyword_name": {
                            "type": "string"
                        },
                        "meta_desc": {
                            "type": "string"
                        },
                        "meta_title": {
                            "type": "string"
                        },
                        "mgmt_description": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "postal_regex": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "includes": {
                    "type": "object",
                    "description": "Present when `include` query param is set.  Valid includes: `content`.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "country": {
            "title": "Country",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name",
                "code"
            ]
        },
        "destination-alternate-list": {
            "title": "Destination Alternate List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/destination-alternate-name"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "destination-alternate-name": {
            "title": "Destination Alternate",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "description": {
                            "type": "string"
                        },
                        "destination_id": {
                            "type": "string"
                        },
                        "last_modified": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "type": "string"
                        },
                        "prefix": {
                            "type": "string"
                        },
                        "short_description": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "destination-coordinate": {
            "title": "Destination Coordinate",
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "destination-list": {
            "title": "Destination List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/destination"
                    }
                }
            }
        },
        "destination": {
            "title": "Destination",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "altnernate_names": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/destination-alternate-name"
                            }
                        },
                        "area": {
                            "type": "integer"
                        },
                        "binder_description": {
                            "type": "string"
                        },
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/destination-coordinate"
                            }
                        },
                        "country_id": {
                            "type": "integer"
                        },
                        "custom_meta_description": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "is_hotel": {
                            "type": "boolean"
                        },
                        "is_property": {
                            "type": "boolean"
                        },
                        "keyword_name": {
                            "type": "string"
                        },
                        "meta_description": {
                            "type": "string"
                        },
                        "meta_title": {
                            "type": "string"
                        },
                        "mgmt_description": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "prefix": {
                            "type": "string"
                        },
                        "short_description": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "included": {
                    "type": "object",
                    "description": "Present when `include` query parameter is present.  Supported includes: `content`.",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "discount": {
            "title": "Discount",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "discount_dollars": {
                            "type": "integer"
                        },
                        "discount_id": {
                            "type": "integer"
                        },
                        "discount_percent": {
                            "type": "number"
                        },
                        "display": {
                            "type": "boolean"
                        },
                        "first_night": {
                            "type": "string"
                        },
                        "last_night": {
                            "type": "string"
                        },
                        "max_days_out": {
                            "type": "integer"
                        },
                        "min_stay": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "public": {
                            "type": "boolean"
                        },
                        "weekday": {
                            "type": "boolean"
                        },
                        "weekend": {
                            "type": "boolean"
                        }   
                    }
                }
            }
        },
        "finance-reporting-location": {
    "title": "Finance Reporting Location",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["finance_reporting_locations"]
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}
,
        "finance-reporting-location-list": {
    "title": "Finance Reporting Location List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/finance-reporting-location"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "Folio": {
        "type": "object",
        "properties": {
            "data": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "booked_currency": {
                                "type": "string",
                                "default": "USD",
                                "description": "Currency Code of the Currency that was used to pay for the Reservation"
                            },
                            "check_in": {
                                "format": "YYYY-MM-DD",
                                "type": "string",
                                "description": "Reservation Check-In Date"
                            },
                            "check_out": {
                                "format": "YYYY-MM-DD",
                                "type": "string",
                                "description": "Reservation Check-Out Date"
                            },
                            "creation_ts": {
                                "type": "integer",
                                "description": "Reservation Creation Timestamp"
                            },
                            "fees": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/FeeBucket"
                                }
                            },
                            "fee_rules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/FeeRule"
                                }
                            },
                            "meta": {
                                "$ref": "#/definitions/folio-meta"
                            },
                            "pet_count": {
                                "type": "integer",
                                "description": "Number of Dogs that will be occupying the Unit"
                            },
                            "rent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/DailyRent"
                                }
                            },
                            "rent_total": {
                                "type": "number",
                                "description": "Rent total. Will only be present if no daily rent breakdown was provided"
                            },
                            "reservation_id": {
                                "type": "string",
                                "description": "ID of the Reservation that the Adjustment will be made on"
                            },
                            "source": {
                                "type": "string",
                                "description": "The source of the Reservation"
                            },
                            "taxes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TaxBucket"
                                }
                            },
                            "tax_rules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TaxRule"
                                }
                            },
                            "unit_id": {
                                "type": "string",
                                "description": "Unit that the reservation is for"
                            },
                            "uuid": {
                                "format": "UUID-V4",
                                "type": "string",
                                "description": "The `uuid` of the Adjustment Preview"
                            }
                        }
                    }
                }
            }
        }
    }
,
        "DailyRent": {
        "type": "object",
        "properties": {
          "date": {
            "description": "Date the rent applies to",
            "format": "YYYY-MM-DD",
            "type": "string"
          },
          "rent": {
            "description": "The amount of rent for the day",
            "type": "number"
          },
          "ltd": {
            "description": "The amount of long term discount for the day",
            "type": "number"
          },
          "disc": {
            "description": "The amount of rent discount for the day",
            "type": "number"
          }
        }
      }
,
        "folio-meta": {
        "type": "object",
        "properties": {
          "origin_policy": {
            "type": "object",
            "description": "Description of the policy that created the snapshot version",
            "allOf": [
              {
                "$ref": "#/definitions/adjustment-policy"
              },
              {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "UUID-V4",
                    "description": "UUID of the folio snapshot the adjustment mutated"
                  },
                  "delta": {
                    "type": "object",
                    "properties": {
                      "fees": {
                        "type": "number",
                        "description": "Change in fee total from previous snapshot"
                      },
                      "rent": {
                        "type": "number",
                        "description": "Change in rent total from previous snapshot"
                      },
                      "taxes": {
                        "type": "number",
                        "description": "Change in tax total from previous snapshot"
                      },
                      "total": {
                        "type": "number",
                        "description": "Change in reservation total from previous snapshot"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
,
        "FeeBucket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fee ID that the amount applies to"
          },
          "amount": {
            "type": "number",
            "description": "The amount to apply to the fee ID"
          }
        }
      }
,
        "FeeRule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of financial rule (should be fee)"
          },
          "id": {
            "type": "string",
            "description": "Fee ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the fee"
              },
              "optional": {
                "type": "integer",
                "description": "Describes whether or not the fee is an opt in fee"
              },
              "discountable": {
                "type": "integer",
                "description": "Describes whether or not the fee is discountable"
              },
              "type": {
                "type": "string",
                "description": "Type of financial rule (should be fee)"
              },
              "targets": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
,
        "TaxBucket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax ID that the amount applies to"
          },
          "amount": {
            "type": "number",
            "description": "The amount to apply to the tax ID"
          }
        }
      }
,
        "TaxRule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of financial rule (should be tax)"
          },
          "id": {
            "type": "string",
            "description": "Tax district ID of the tax"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the tax district"
              },
              "fees": {
                "type": "array",
                "description": "Fee IDs the tax applies to",
                "items": {
                  "type": "integer"
                }
              },
              "type": {
                "type": "string",
                "description": "Type of financial rule (should be tax)"
              },
              "targets": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
,
        "guarantee-date-list": {
            "title": "Guarantee Date List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/guarantee-date-single"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "guarantee-date-single": {
            "title": "Guarantee Date Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "links": {
                    "$ref": "#/definitions/link"
                },
                "data": {
                    "$ref": "#/definitions/guarantee-date"
                },
                "includes": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "guarantee-date": {
            "title": "Guarantee Date",
            "type": "object",
            "description": "JsonAPI Resource Object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "added_by": {
                            "type": "number",
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes"
                        },
                        "created_at": {
                            "type": "string",
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes",
                            "format": "date-time"
                        },
                        "gross_rental_income": {
                            "type": "number"
                        },
                        "guarantee_id": {
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes",
                            "type": "number"
                        },
                        "guarantee_month": {
                            "type": "string",
                            "description": "in USD",
                            "format": "date"
                        },
                        "is_active": {
                            "type": "boolean"
                        },
                        "month": {
                            "type": "integer",
                            "description": "in USD"
                        },
                        "net_adjustment": {
                            "type": "number"
                        },
                        "net_income": {
                            "type": "number",
                            "description": "in USD"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            },
            "required": [
                "type",
                "id",
                "attributes"
            ]
        },
        "guarantee-list": {
            "title": "Guarantee List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/guarantee"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "guarantee-single": {
            "title": "Guarantee Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/guarantee"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/standard-error"
                    }
                }
            },
            "required": [
                "errors"
            ]
        },
        "guarantee": {
            "title": "Guarantee",
            "type": "object",
            "description": "JsonAPI Resource Object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "required": [
                        "adjusted_net_income_total"
                    ],
                    "properties": {
                        "adjusted_net_income_total": {
                            "type": "number",
                            "description": "in USD"
                        },
                        "created_date": {
                            "type": "string",
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes",
                            "format": "date-time"
                        },
                        "is_documentation_submitted": {
                            "type": "boolean"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "prior_commission": {
                            "type": "number"
                        },
                        "start_date": {
                            "type": "string",
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes",
                            "format": "date-time"
                        },
                        "unit_id": {
                            "description": "JsonAPI Resource Object Relationships http://jsonapi.org/format/#document-resource-object-attributes",
                            "type": "number"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "voided": {
                            "type": "boolean"
                        },
                        "year_guarantee_adjustment": {
                            "type": "number",
                            "description": "in USD"
                        },
                        "year_kicker": {
                            "type": "number",
                            "description": "in USD"
                        }
                    }
                }
            },
            "required": [
                "type",
                "id",
                "attributes"
            ]
        },
        "identity-check-single": {
            "type": "object",
            "title": "Identity Check Single",
            "properties": {
                "data": {
                    "$ref": "#/definitions/identity-check"
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "identity-check": {
            "type": "object",
            "title": "Identity Check",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 100
                        },
                        "approved_for_checkout": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Allowed values are 1, 0."
                        },
                        "blocklist_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "challenge_questions_quantity_correct": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "challenge_questions_quantity_shown": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "code_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "differentiator_shown": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Allowed values are 1, 0."
                        },
                        "email": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "format": "email",
                            "maxLength": 100
                        },
                        "external_reference_id": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "external_response_message": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "first_name": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 50
                        },
                        "last_name": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 50
                        },
                        "passed_initial_check": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Allowed values are 1, 0."
                        },
                        "phone": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 50
                        },
                        "questions_quantity_correct": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "questions_quantity_shown": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "received_hard_fail": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Allowed values are 1, 0."
                        },
                        "received_soft_fail": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Allowed values are 1, 0."
                        },
                        "reservation_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "reservations_incomplete_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "unit_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "zip": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 10
                        }
                    }
                }
            }
        },
        "inquiry-single": {
            "type": "object",
            "title": "Inquiry Single",
            "properties": {
                "data": {
                    "$ref": "#/definitions/inquiry"
                }
            }
        },
        "inquiry": {
            "type": "object",
            "title": "Inquiry",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "adults": {
                            "type": "integer"
                        },
                        "area_code": {
                            "type": "string"
                        },
                        "available": {
                            "type": "integer"
                        },
                        "check_in": {
                            "type": "string"
                        },
                        "check_out": {
                            "type": "string"
                        },
                        "children": {
                            "type": "integer"
                        },
                        "clean_number": {
                            "type": "string"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "country_phone_code": {
                            "type": "integer"
                        },
                        "date": {
                            "type": "string"
                        },
                        "duplicate": {
                            "type": "integer"
                        },
                        "email": {
                            "type": "string"
                        },
                        "email_id": {
                            "type": "integer"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "ha_inqiury_id": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "listing_id": {
                            "type": "integer"
                        },
                        "locale": {
                            "type": "string",
                            "description": "An enum value. Possible values:\n\n```\n'da_DK', 'de_AT', 'de_DE', 'el_GR', 'en_AU', 'en_CA', 'en_GB', 'en_IE', 'en_IN', 'en_NZ', 'en_US', 'es_AR', 'es_CO', 'es_ES', 'es_MX', 'fi_FI', 'fr_CA', 'fr_FR', 'it_IT', 'nl_NL', 'no_NO', 'pl_PL', 'pt_BR', 'pt_PT', 'ru_RU', 'sv_SE', 'tr_TR'\n```"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "source": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        },
                        "unit_id": {
                            "type": "integer"
                        },
                        "unsubscribe": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "integration-partner-list": {
            "title": "Integration Partner List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/integration-partner"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "detail": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "meta": {
                                "type": "object",
                                "properties": {
                                    "validation": {
                                        "type": "array",
                                        "items": {}
                                    }
                                }
                            },
                            "status": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "status",
                            "title"
                        ]
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "integration-partner-single": {
            "title": "Integration Partner Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/integration-partner"
                }
            }
        },
        "integration-partner": {
            "title": "Integration Partner",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        }
                    }
                }
            },
            "example": {
                "type": "integration_partners",
                "id": "1234",
                "attributes": {
                    "name": "sint Ut n",
                    "description": "minim",
                    "status": 1
                }
            }
        },
        "language-list": {
            "title": "Language List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/language"
                    }
                },
                "included": {
                    "type": "object",
                    "properties": {
                        "links": {
                            "type": "object",
                            "description": "JsonAPI Links http://jsonapi.org/format/#document-links",
                            "properties": {
                                "self": {
                                    "type": "string",
                                    "description": "URL location of this Resource Object.",
                                    "format": "uri"
                                },
                                "related": {
                                    "type": "string",
                                    "description": "URL location for objects related to this Object",
                                    "format": "uri"
                                },
                                "first": {
                                    "type": "string",
                                    "description": "First entry in paginated series",
                                    "format": "uri"
                                },
                                "last": {
                                    "type": "string",
                                    "description": "Last entry in paginated series",
                                    "format": "uri"
                                },
                                "prev": {
                                    "type": "string",
                                    "description": "Previous entry in paginated series",
                                    "format": "uri"
                                },
                                "next": {
                                    "type": "string",
                                    "description": "Next entry in paginated series",
                                    "format": "uri"
                                }
                            }
                        },
                        "data": {
                            "type": "array",
                            "description": "{Related Object Data}",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "type"
                                ]
                            }
                        },
                        "meta": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "language": {
            "title": "Language",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string",
                    "description": ""
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "browser_code": {
                            "type": "string",
                            "description": "Web browser language code",
                            "maxLength": 10
                        },
                        "country": {
                            "type": "string"
                        },
                        "language_id": {
                            "type": "integer",
                            "maximum": 11
                        },
                        "iso_639_code": {
                            "type": "string",
                            "description": "An ISO 639-1 language code",
                            "minLength": 2,
                            "maxLength": 2
                        },
                        "name": {
                            "type": "string",
                            "maxLength": 145
                        },
                        "native_name": {
                            "type": "string",
                            "maxLength": 145
                        },
                        "onboarding": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "iso_639_code",
                        "browser_code",
                        "onboarding",
                        "active"
                    ]
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "link": {
            "title": "Link",
            "type": "object",
            "description": "JsonAPI Links\nhttp://jsonapi.org/format/#document-links",
            "properties": {
                "first": {
                    "type": "string",
                    "format": "uri",
                    "description": "First entry in paginated series"
                },
                "last": {
                    "type": "string",
                    "description": "Last entry in paginated series",
                    "format": "uri"
                },
                "next": {
                    "type": "string",
                    "description": "Next entry in paginated series",
                    "format": "uri"
                },
                "prev": {
                    "type": "string",
                    "description": "Previous entry in paginated series",
                    "format": "uri"
                },
                "related": {
                    "type": "string",
                    "description": "URL location for objects related to this Object",
                    "format": "uri"
                },
                "self": {
                    "type": "string",
                    "description": "URL location of this Resource Object.",
                    "format": "uri"
                }
            },
            "example": {
                "self": "http://alexane.com",
                "related": "https://ferne.name",
                "first": "http://maeve.net",
                "last": "http://theo.com",
                "prev": "http://burnice.biz",
                "next": "http://palma.net"
            }
        },
        "location": {
            "title": "Location",
            "type": "object",
            "description": "Latitude and Longitude",
            "properties": {
                "lat": {
                    "type": "number",
                    "description": "Latitudinal coordinates",
                    "example": 1.23344
                },
                "lng": {
                    "type": "number",
                    "description": "Longitudinal coordinates",
                    "example": 1.23344
                }
            },
            "required": [
                "lat",
                "lng"
            ],
            "example": {
                "lat": -77384183,
                "lng": 62104600
            }
        },
        "login": {
    "title": "Login",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": [ "string", "null" ]
                },
                "last_name": {
                    "type": [ "string", "null" ]
                },
                "email_address": {
                    "type": [ "string", "null" ]
                },
                "title": {
                    "type": [ "string", "null" ]
                },
                "phone": {
                    "type": [ "string", "null" ]
                }
            }
        }
    }
}
,
        "login-list": {
    "title": "Login List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/login"
            }
        }
    }
},
        "login-single": {
    "title": "Login Single",
    "type": "object",
    "properties": {
        "data": {
            "$ref": "#/definitions/login"
        }
    }
},
        "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "from": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "per_page": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                },
                "total": {
                    "description": "number of pages in paged response",
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "office-list": {
            "type": "object",
            "title": "Office List",
            "description": "Represents a list of Vacasa office objects",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/office"
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "string"
                        },
                        "last": {
                            "type": "string"
                        },
                        "next": {
                            "type": "string"
                        },
                        "prev": {
                            "type": "string"
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "from": {
                            "type": "integer"
                        },
                        "last_page": {
                            "type": "integer"
                        },
                        "path": {
                            "type": "string"
                        },
                        "per_page": {
                            "type": "integer"
                        },
                        "to": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        },
                        "transaction_id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "office": {
            "title": "Office",
            "description": "Represents a Vacasa office",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": [
                        "object"
                    ],
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "address2": {
                            "type": "string"
                        },
                        "active": {
                            "type": "boolean"
                        },
                        "city": {
                            "type": "string"
                        },
                        "country": {
                            "type": "string"
                        },
                        "fax": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "post_office_box": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "zip": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "owner-list": {
            "title": "Owner List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/owner"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "owner": {
            "title": "Owner",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "address_1": {
                            "type": "string"
                        },
                        "address_2": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "country": {
                            "type": "string"
                        },
                        "country_code": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "language": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "phone_notes": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "tax_entity_name": {
                            "type": "string"
                        },
                        "tax_form_code_id": {
                            "type": "integer"
                        },
                        "tax_id": {
                            "type": "string"
                        },
                        "zip_code": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "owner-hold-list": {
     "title": "Owner Hold List",
     "type": "object",
     "properties": {
         "meta": {
             "$ref": "#/definitions/meta"
         },
         "data": {
             "type": "array",
             "items": {
                 "$ref": "#/definitions/owner-hold"
             }
         },
         "errors": {
             "type": "array",
             "items": {
                 "$ref": "#/definitions/standard-error"
             }
         }
     }
 },
        "owner-hold-single": {
     "title": "Owner Hold Single",
     "type": "object",
     "properties": {
         "meta": {
             "$ref": "#/definitions/meta"
         },
         "data": {
             "$ref": "#/definitions/owner-hold"
         }
     }
 },
        "owner-hold": {
     "title": "Owner Hold",
     "type": "object",
     "properties": {
         "type": {
             "type": "string"
         },
         "id": {
             "type": "integer"
         },
         "attributes": {
             "type": "object",
             "properties": {
                 "reservation_id": {
                     "type": "integer"
                 },
                 "type": {
                     "type": "string"
                 },
                 "who_booked": {
                     "type": "string"
                 },
                 "owner_can_edit": {
                     "type": "integer"
                 }
             }
         }
     }
 },
        "page-list": {
            "title": "Page List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "page": {
            "title": "Page",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "created_by": {
                            "type": "integer"
                        },
                        "deleted_at": {
                            "type": "string"
                        },
                        "deleted_by": {
                            "type": "integer"
                        },
                        "text": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "slug": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "partner-credential": {
            "title": "Partner Credential",
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                },
                "api_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encrypted_secret_key": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "integer"
                },
                "integration_partner_id": {
                    "type": "integer"
                },
                "is_dev": {
                    "type": "boolean"
                },
                "partner_credential_id": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "photo-list": {
            "title": "Photo List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/photo"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "photo-single": {
            "title": "Photo Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "links": {
                    "$ref": "#/definitions/link"
                },
                "data": {
                    "$ref": "#/definitions/photo"
                },
                "includes": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "photo": {
            "title": "Photo",
            "type": "object",
            "description": "JsonAPI Resource Object\nhttp://jsonapi.org/format/#document-resource-objects",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "image_rank": {
                            "type": "integer",
                            "description": "Default photo sort order. Photos are sorted in ascending order."
                        },
                        "url": {
                            "type": "string",
                            "description": "url for photo"
                        }
                    }
                }
            },
            "required": [
                "type",
                "id"
            ]
        },
        "quote-single": {
            "title": "Quote Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/quote"
                },
                "included": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/related-object"
                    }
                }
            }
        },
        "quote": {
            "title": "Quote",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "subtotals": {
                            "type": "object",
                            "properties": {
                                "discount": {
                                    "type": "number"
                                },
                                "fee": {
                                    "type": "number"
                                },
                                "fee_adjustment": {
                                    "type": "number"
                                },
                                "rent": {
                                    "type": "number"
                                },
                                "rent_adjustment": {
                                    "type": "number"
                                },
                                "tax": {
                                    "type": "number"
                                },
                                "tax_adjustment": {
                                    "type": "number"
                                },
                                "trip_protection": {
                                    "type": "number"
                                },
                                "trip_protection_adjustment": {
                                    "type": "number"
                                }
                            }
                        },
                        "sum": {
                            "type": "number"
                        },
                        "optional_trip_protection": {
                            "type": [
                                "number",
                                "null"
                            ],
                            "description": "The cost of trip protection, were you to add it to this quote."
                        },
                        "currency": {
                            "type": "string"
                        },
                        "fees": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Localized fee name"
                                    },
                                    "id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "taxes": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "default": "The group name and tax rate percentage"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "discounts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "group_name": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "nights": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "string"
                                    },
                                    "date": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "quote-v2": {
    "title": "Quote V2",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "subtotals": {
                    "type": "object",
                    "properties": {
                        "discount": {
                            "type": "number"
                        },
                        "fee": {
                            "type": "number"
                        },
                        "rent": {
                            "type": "number"
                        },
                        "tax": {
                            "type": "number"
                        },
                        "trip_protection": {
                            "type": "number"
                        }
                    }
                },
                "sum": {
                    "type": "number"
                },
                "optional_trip_protection": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The cost of trip protection, were you to add it to this quote."
                },
                "currency": {
                    "type": "string"
                },
                "tripProtection": {
                    "type": "number"
                }, 
                "feeBuckets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Localized fee name"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "object",
                                "properties": {
                                    "currency": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "taxBuckets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "amount": {
                                "type": "object",
                                "properties": {
                                    "currency": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "dailyRent": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "ltd": {
                                "type": "object",
                                "properties": {
                                    "currency": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "totalRent": {
                    "type": "object",
                    "properties": {
                        "rent": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                }
                            }
                        },
                        "ltd": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                }
                            }
                        },
                        "disc": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "nights": {
                    "type": "integer"
                },
                "checkIn": {
                    "type": "string",
                    "format": "date"
                },
                "checkOut": {
                    "type": "string",
                    "format": "date"
                },
                "petCount": {
                    "type": "integer"
                },
                "unitId": {
                    "type": "string"
                }
            }
        }
    }
}
,
        "quote-v2-single": {
    "title": "Quote Single V2",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "$ref": "#/definitions/quote-v2"
        },
        "included": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/related-object"
            }
        }
    }
}
,
        "region-city-list": {
            "title": "Region City List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/region-city"
                }
            }
        },
        "region-city": {
            "title": "Region City",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "alt_city_id": {
                            "type": "integer"
                        },
                        "city": {
                            "type": "string"
                        },
                        "city_one_line_desc": {
                            "type": "string"
                        },
                        "city_url": {
                            "type": "string"
                        },
                        "city_web_desc": {
                            "type": "string"
                        },
                        "custom_meta_desc": {
                            "type": "string"
                        },
                        "display": {
                            "type": "boolean"
                        },
                        "image_id": {
                            "type": "integer"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "keyword_name": {
                            "type": "string"
                        },
                        "lat": {
                            "type": "number"
                        },
                        "lng": {
                            "type": "number"
                        },
                        "meta_title": {
                            "type": "string"
                        },
                        "redirect": {
                            "type": "boolean"
                        },
                        "region_desc": {
                            "type": "string"
                        },
                        "region_id": {
                            "type": "integer"
                        },
                        "state": {
                            "type": "string"
                        },
                        "state_id": {
                            "type": "integer"
                        },
                        "state_in_name": {
                            "type": "boolean"
                        }
                    }
                },
                "included": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "attributes": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "region-list": {
            "title": "Region List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/region"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "region-phone-list": {
            "title": "Region Phone List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/region-phone"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "region-phone": {
            "title": "Region Phone",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "phone_number": {
                            "type": "string"
                        },
                        "region_id": {
                            "type": "integer"
                        },
                        "source": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "region": {
            "title": "Region",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "country_id": {
                            "type": "integer"
                        },
                        "destination_id": {
                            "type": "integer"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "in_heading": {
                            "type": "string"
                        },
                        "in_menu": {
                            "type": "string"
                        },
                        "marketing_tag": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "public_url": {
                            "type": "string"
                        },
                        "region_binder_description": {
                            "type": "string"
                        },
                        "region_description": {
                            "type": "string"
                        },
                        "region_url": {
                            "type": "string"
                        },
                        "region_web_description": {
                            "type": "string"
                        },
                        "region_prefix": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "to_heading": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "related-object-data": {
            "title": "Related Object Data",
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "related-object": {
            "title": "Related Object",
            "type": "object",
            "properties": {
                "links": {
                    "$ref": "#/definitions/link"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/related-object-data"
                    }
                },
                "meta": {
                    "type": "object"
                }
            }
        },
        "reservation-adjustment-patch": {
            "title": "Reservation Adjustment",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "attributes",
                        "id",
                        "type"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["reservation-adjustment"]
                        },
                        "attributes": {
                            "required": [ "adjustment_policy", "user_id" ],
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "integer",
                                    "description": "The ID of the User that is performing the Reservation Adjustment",
                                    "example": 666
                                },
                                "adjustment_policy": {
                                    "type": "object",
                                    "required": ["policy_info"],
                                    "properties": {
                                        "policy_info": {
                                            "type": "object",
                                            "required": ["policyType"],
                                            "properties": {
                                                "policyType": {
                                                    "type": "string",
                                                    "enum": ["adjustPet","cancelReservation","extendStay","manageCharges","moveDates"]
                                                },
                                                "fsc":{
                                                    "type": "object",
                                                    "required": ["rate"],
                                                    "properties": {
                                                        "rate":{
                                                            "type": "number",
                                                            "minimum": 0.001,
                                                            "maximum": 10
                                                        },
                                                        "start_date":{
                                                            "type": "string",
                                                            "format": "YYYY-MM-DD",
                                                            "description": "Required if `end_date` is present"
                                                        },
                                                        "end_date":{
                                                            "type": "string",
                                                            "format": "YYYY-MM-DD",
                                                            "description": "Required if `start_date` is present"
                                                        },
                                                        "expiration_date":{
                                                            "type": "string",
                                                            "format": "YYYY-MM-DD"
                                                        },
                                                        "email":{
                                                            "type": "string"
                                                        },
                                                        "note":{
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
,
        "reservation-adjustment-post": {
            "title": "Reservation Adjustment",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "attributes",
                        "type"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["reservation-adjustment"]
                        },
                        "attributes": {
                            "type": "object",
                            "required": [
                                "adjustment_policy",
                                "reservation_id",
                                "user_id"
                            ],
                            "properties": {
                                "adjustment_policy": {
                                    "$ref": "#/definitions/adjustment-policy"
                                },
                                "reservation_id": {
                                    "type": "string",
                                    "description": "The ID of the Reservation that the Adjustment is to be applied to",
                                    "example": "12341234",
                                    "format": "11 Chars Max"
                                },
                                "user_id": {
                                    "type": "integer",
                                    "description": "The ID of the User that is performing the Reservation Adjustment",
                                    "example": 666
                                }
                            }
                        }
                    }
                }
            }
        }
,
        "reservation-list": {
            "title": "Reservation List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reservation"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "reservation-single": {
            "title": "Reservation Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/reservation"
                }
            }
        },
        "reservation": {
            "title": "Reservation",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "accounting_entities": {
                            "type": "object",
                            "properties": {
                                "accounting_entity_id": {
                                    "type": "integer"
                                },
                                "currency_id": {
                                    "type": "integer"
                                },
                                "start_date": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "end_date": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "format": "date-time"
                                }
                            }
                        },
                        "address_1": {
                            "type": "string",
                            "description": "This field is deprecated and has been moved to the `guest_address` object, please access this field there"
                        },
                        "address_2": {
                            "type": "string",
                            "description": "This field is deprecated and has been moved to the `guest_address` object, please access this field there"
                        },
                        "adults": {
                            "type": "integer"
                        },
                        "alarm_code": {
                            "type": "string"
                        },
                        "alarm_code_notes": {
                            "type": "string"
                        },
                        "autopay": {
                            "type": "integer"
                        },
                        "balance": {
                            "type": "number"
                        },
                        "booked_currency_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "cancellation_date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "cancellation_reason": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "cancellation_reason_tag": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "cancelled": {
                            "type": "boolean"
                        },
                        "cancelled_by": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "channel": {
                            "type": "string"
                        },
                        "children": {
                            "type": "integer"
                        },
                        "city": {
                            "type": "object",
                                "description": "Details of the city the unit resides in.",
                                "properties": {
                                    "Active": {
                                        "type": "boolean"
                                    },
                                    "altCityName": {
                                        "type": "string"
                                    },
                                    "CanonicalURL": {
                                        "type": "string"
                                    },
                                    "City": {
                                        "type": "string"
                                    },
                                    "CityBinderDesc": {
                                        "type": "string"
                                    },
                                    "CityID": {
                                        "type": "integer"
                                    },
                                    "CityOneLineDesc": {
                                        "type": "string"
                                    },
                                    "CityURL": {
                                        "type": "string"
                                    },
                                    "CityWebDesc": {
                                        "type": "string"
                                    },
                                    "CountryCanonicalURL": {
                                        "type": "string"
                                    },
                                    "CountryID": {
                                        "type": "string"
                                    },
                                    "CountryName": {
                                        "type": "string"
                                    },
                                    "Display": {
                                        "type": "boolean"
                                    },
                                    "EndDate": {
                                        "type": "string"
                                    },
                                    "ExtDesc": {
                                        "type": "string"
                                    },
                                    "ImageID": {
                                        "type": "integer"
                                    },
                                    "LanguageID": {
                                        "type": "integer"
                                    },
                                    "Lat": {
                                        "type": "string"
                                    },
                                    "Lng": {
                                        "type": "string"
                                    },
                                    "MetaDesc": {
                                        "type": "string"
                                    },
                                    "Mgmt": {
                                        "type": "string"
                                    },
                                    "OfficeID": {
                                        "type": "integer"
                                    },
                                    "RegionDesc": {
                                        "type": "string"
                                    },
                                    "RegionID": {
                                        "type": "integer"
                                    },
                                    "StartDate": {
                                        "type": "string"
                                    },
                                    "State": {
                                        "type": "string"
                                    },
                                    "StateCanonicalURL": {
                                        "type": "string"
                                    },
                                    "StateID": {
                                        "type": "string"
                                    },
                                    "StateInName": {
                                        "type": "boolean"
                                    },
                                    "StateName": {
                                        "type": "string"
                                    },
                                    "ZipRegex": {
                                        "type": "string"
                                    }
                                }
                        },
                        "clean_after_stay": {
                            "type": "boolean"
                        },
                        "clean_start": {
                            "type": "string"
                        },
                        "clean_end": {
                            "type": "string"
                        },
                        "cleaning_fees": {
                            "type": "number"
                        },
                        "clean_phone_1": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "confirmation": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "confirmation_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "contract_needs_acknowledgement": {
                            "type": "boolean"
                        },
                        "created_by": {
                            "type": "integer"
                        },
                        "creation_date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "discount_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "display_currency_code": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "driving_directions": {
                            "type": "string"
                        },
                        "e_lock_code": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "extended": {
                            "type": "boolean"
                        },
                        "extra_cleaning_days": {
                            "type": "integer"
                        },
                        "fee_amount": {
                            "type": "number"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "first_night": {
                            "type": "string",
                            "format": "date"
                        },
                        "garage_parking": {
                            "type": "boolean"
                        },
                        "gate_code": {
                            "type": "string"
                        },
                        "gate_code_notes": {
                            "type": "string"
                        },
                        "guest_address": {
                            "type": "object",
                            "description": "Details of the guest's residential/billing address",
                            "properties": {
                                "address_1": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "address_2": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "city": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "state": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "zip": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            }
                        },
                        "housekeeping_extension": {
                            "type": "integer"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "last_night": {
                            "type": "string",
                            "format": "date"
                        },
                        "late_checkout": {
                            "type": "boolean"
                        },
                        "listing_channel_reservation_id": {
                            "type": "string"
                        },
                        "lockbox_code": {
                            "type": "string"
                        },
                        "lockbox_code_backup": {
                            "type": "string"
                        },
                        "lockbox_code_notes": {
                            "type": "string"
                        },
                        "notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "paid": {
                            "type": "number"
                        },
                        "parking_notes": {
                            "type": "string"
                        },
                        "parking_total_cars": {
                            "type": "integer"
                        },
                        "pets": {
                            "type": "integer"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "phone_2": {
                            "type": "string"
                        },
                        "preferred_language": {
                            "type": "string"
                        },
                        "prior_reservation": {
                            "type": "integer"
                        },
                        "processed": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "rent": {
                            "type": "number"
                        },
                        "reservation_id": {
                            "type": "integer"
                        },
                        "reservations_source_uuid": {
                            "type": ["string", "null"],
                            "format": "uuid"                        },
                        "reservation_source_id": {
                            "type": "number"
                        },
                        "reservation_source_display_name": {
                            "type": "string"
                        },
                        "reservation_source_type": {
                            "type": "string"
                        },
                        "tax_amount": {
                            "type": "number"
                        },
                        "terms": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "total": {
                            "type": "number"
                        },
                        "trip_protection": {
                            "type": "integer",
                            "description": "Values less than 1 indicates no TripProtection."
                        },
                        "trip_protection_fee": {
                            "type": "number"
                        },
                        "type": {
                            "type": "integer"
                        },
                        "unit_address": {
                            "type": "object",
                            "properties": {
                                "address_1": {
                                    "type": "string"
                                },
                                "address_2": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "state": {
                                    "type": "string"
                                },
                                "zip": {
                                    "type": "string"
                                }
                            }
                        },
                        "unit_id": {
                            "type": "integer"
                        },
                        "unit_name": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date"
                        },
                        "uuid": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "vacasa_is_merchant_of_record": {
                            "type": "boolean"
                        },
                        "vehicle": {
                            "type": "string"
                        },
                        "vehicle_opt_out": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "format": "date-time"
                        },
                        "wifi": {
                            "type": "boolean"
                        },
                        "wifi_network": {
                            "type": "string"
                        },
                        "wifi_password": {
                            "type": "string"
                        }
                    }
                }
            }
        }
,
        "reservationguest-single": {
            "title": "ReservationGuest Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/reservationguest"
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "reservationguest": {
            "title": "ReservationGuest",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "reservation_id": {
                            "type": "integer"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                }
            }
        },
        "review-list": {
            "title": "Review List",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/review"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/meta"
                }
            }
        },
        "review-single": {
            "title": "Review Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "links": {
                    "$ref": "#/definitions/link"
                },
                "data": {
                    "$ref": "#/definitions/review"
                },
                "includes": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "review": {
            "title": "Review",
            "type": "object",
            "description": "JsonAPI Resource Object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "string"
                        },
                        "cleanliness": {
                            "type": "integer"
                        },
                        "display_rating": {
                            "type": "boolean"
                        },
                        "display_review": {
                            "type": "boolean"
                        },
                        "first_name": {
                            "type": "string"
                        },
                        "heading": {
                            "type": "string"
                        },
                        "last_initial": {
                            "type": "string"
                        },
                        "location": {
                            "type": "integer"
                        },
                        "location_city": {
                            "type": "integer"
                        },
                        "overall": {
                            "type": "integer"
                        },
                        "property_condition": {
                            "type": "integer"
                        },
                        "recommend": {
                            "type": "integer"
                        },
                        "reservation_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "response": {
                            "type": "string"
                        },
                        "review": {
                            "type": "string"
                        },
                        "review_date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "service": {
                            "type": "integer"
                        },
                        "star_rating": {
                            "type": "integer"
                        },
                        "state": {
                            "type": "string"
                        },
                        "submission_status": {
                            "type": "integer"
                        },
                        "unit_id": {
                            "type": "integer"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            },
            "required": [
                "type",
                "id",
                "attributes"
            ]
        },
        "standard-error": {
                "title": "Standard Error",
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "detail": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "status",
                                "title"
                            ]
                        }
                    }
                }
            },
        "state-list": {
            "title": "State List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/state"
                    }
                }
            }
        },
        "state": {
            "title": "State",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "country_id": {
                            "type": "integer"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "keyword_name": {
                            "type": "string"
                        },
                        "meta_desc": {
                            "type": "string"
                        },
                        "mgmt_description": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "short_name": {
                            "type": "string"
                        },
                        "state_desc": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "included": {
                    "type": "object",
                    "description": "Present only when `include` query param is present.  Valid includes: `content`.",
                    "properties": {
                        "attributes": {
                            "type": "object"
                        },
                        "id": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "status": {
            "title": "Status",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "terminated": {
            "title": "Terminated",
            "type": "integer",
            "description": "`0`: Not Terminated `-1`: Termination Pending `1`: Terminated",
            "enum": [
                0,
                -1,
                1
            ]
        },
        "unit-amenities-reduced-list": {
            "title": "Unit Amenities (Reduced List)",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/unit-amenity-reduced"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "unit-amenity-list": {
            "title": "Unit Amenity List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/unit-amenity"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "unit-amenity-properties-list": {
            "title": "Unit Amenity Properties List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/unit-amenity-property"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        }
,
        "unit-amenity-reduced": {
            "title": "Unit Amenity (Reduced)",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "amenity_id": {
                            "type": "integer"
                        },
                        "amenity_value": {
                            "type": "string"
                        },
                        
                        "provider_name": {
                            "type": "string"
                        },
                        "unit_id": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "unit-amenity": {
            "title": "Unit Amenity",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "amenity_id": {
                            "type": "integer"
                        },
                        "amenity_name": {
                            "type": "string"
                        },
                        "amenity_option": {
                            "type": "string"
                        },
                        "amenity_value": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "instructions": {
                            "type": "string"
                        },
                        "internal_notes": {
                            "type": "string"
                        },
                        "is_public": {
                            "type": "boolean"
                        },
                        "is_shared": {
                            "type": "boolean"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "provider_id": {
                            "type": "integer"
                        },
                        "provider_name": {
                            "type": "string"
                        },
                        "shared_text": {
                            "type": "string"
                        },
                        "unit_code": {
                            "type": "string"
                        },
                        "unit_id": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "unit-amenity-property": {
            "title": "Unit Amenity Property",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "amenity_id": {
                            "type": "integer",
                            "format": "int(11)"
                        },
                        "idamenities_properties": {
                            "type": "integer",
                            "format": "int(11)"
                        },
                        "property_value": {
                            "type": "string",
                            "format": "TEXT"
                        },
                        "unit_id": {
                            "type": "integer",
                            "format": "smallint(5) unsigned"
                        }
                    }
                }
            }
        }
,
        "unit-amenity-property-single": {
            "title": "Unit Amenity Property Single",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/unit-amenity-property"
                }
            }
        },
        "unit-amenity-property-metadata": {
            "title": "Unit Amenity Property Metadata",
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "unit-block-list": {
    "title": "Unit Block List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/unit-block"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "unit-block-single": {
    "title": "Unit Block Single",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "$ref": "#/definitions/unit-block"
        }
    }
}
,
        "unit-block": {
    "title": "Unit Block",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["unit_blocks"]
        },
        "id": {
            "type": "integer"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "unit_id": {
                    "type": "integer"
                },
                "unit_block_type_id": {
                    "type": "integer"
                },
                "days_out": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                }
            }
        }
    }
}
,
        "unit-content-list": {
            "title": "Unit Content List",
            "type": "array",
            "items": {
                "$ref": "#/definitions/unit-content"
            }
        },
        "unit-content": {
            "title": "Unit Content",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "A unit description"
                        },
                        "description2": {
                            "type": "string",
                            "description": "A long unit description"
                        },
                        "language": {
                            "$ref": "#/definitions/language"
                        },
                        "title": {
                            "type": "string",
                            "description": "A unit title"
                        }
                    }
                }
            },
            "required": [
                "type"
            ]
        }
,
        "unit-event": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "event_origin": {
                                        "type": "string"
                                    },
                                    "event_type": {
                                        "type": "string"
                                    },
                                    "unit_id": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "title": "Unit Event"
        },
        "unit-reservation-buffer-list": {
    "title": "Unit Reservation Buffer List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/unit-reservation-buffer"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "unit-reservation-buffer-single": {
    "title": "Unit Reservation Buffer Single",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "$ref": "#/definitions/unit-reservation-buffer"
        }
    }
}
,
        "unit-reservation-buffer": {
    "title": "Unit Reservation Buffer",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["unit_reservation_buffers"]
        },
        "id": {
            "type": "integer"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "unit_reservation_buffer_id": {
                    "type": "integer"
                },
                "unit_id": {
                    "type": "integer"
                },
                "unit_reservation_buffer_reason_id": {
                    "type": "integer"
                },
                "buffer_days": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                }
            }
        }
    }
}
,
        "unit-timezone-list": {
    "title": "Unit Timezone List",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/unit-timezone"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "unit-timezone-single": {
    "title": "Unit Timezone Single",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "$ref": "#/definitions/unit-timezone"
        }
    }
}
,
        "unit-timezone": {
    "title": "Unit Timezone",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "integer"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "unit_timezone_id": {
                    "type": "integer"
                },
                "unit_id": {
                    "type": "integer"
                },
                "timezone": {
                    "type": "string"
                }
            }
        }
    }
}
,
        "unit-list": {
            "title": "Unit List",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/unit"
                    }
                },
                "included": {
                    "$ref": "#/definitions/related-object"
                }
            }
        },
        "unit-single": {
            "title": "Unit Single",
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta"
                },
                "data": {
                    "$ref": "#/definitions/unit"
                },
                "included": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/related-object"
                    }
                }
            }
        },
        "unit-overlap": {
            "title": "Unit Overlap",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["unit_overlaps"]
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "unit_id1": {
                            "type": "integer"
                        },
                        "unit_id2": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
,
        "unit": {
            "title": "Unit",
            "type": "object",
            "description": "JsonAPI Resource Object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "JsonAPI Resource Object Type"
                },
                "id": {
                    "type": "string",
                    "description": "JsonAPI Resource Object ID"
                },
                "attributes": {
                    "type": "object",
                    "required": [
                        "created_at",
                        "updated_at"
                    ],
                    "properties": {
                        "acknowledge_online": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "acknowledge_signed": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "acquired": {
                            "type": "boolean"
                        },
                        "acquisition_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "active": {
                            "$ref": "#/definitions/active"
                        },
                        "address": {
                            "$ref": "#/definitions/address"
                        },
                        "address_confirmed": {
                            "type": "boolean"
                        },
                        "alarm_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "alarm_code_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "available_discounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/discount"
                            }
                        },
                        "avg_rate": {
                            "type": "integer"
                        },
                        "backup_lockbox": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "bathrooms": {
                            "type": "object",
                            "properties": {
                                "full_baths": {
                                    "type": "integer"
                                },
                                "half_baths": {
                                    "type": "integer"
                                }
                            }
                        },
                        "beach_access": {
                            "type": "string"
                        },
                        "bedrooms": {
                            "type": "integer"
                        },
                        "channel_fee_cost_sharing_id": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "check_in_time": {
                            "type": "string"
                        },
                        "check_out_time": {
                            "type": "string"
                        },
                        "city_id": {
                            "type": "integer"
                        },
                        "cleaning_fee": {
                            "type": "number"
                        },
                        "code": {
                            "type": "string"
                        },
                        "contract_terms": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "created_by": {
                            "type": "integer"
                        },
                        "current_mgmtfee": {
                            "type": "number"
                        },
                        "custom_coordinates": {
                            "type": "boolean"
                        },
                        "date_first_active": {
                            "type": "string"
                        },
                        "days_out": {
                            "type": "number"
                        },
                        "default_housekeeper": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "description2": {
                            "type": "string"
                        },
                        "display": {
                            "type": "boolean"
                        },
                        "display_address": {
                            "type": "boolean"
                        },
                        "display_lat": {
                            "type": "number"
                        },
                        "display_lng": {
                            "type": "number"
                        },
                        "driving_directions": {
                            "type": "string"
                        },
                        "e_lock_active": {
                            "type": "integer"
                        },
                        "e_lock_gateway": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "finance_reporting_location_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "garage_parking": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "gate_code": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "gate_code_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "general_manager": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "last_name": {
                                    "type": "string"
                                }
                            }
                        },
                        "high_base_rate": {
                            "type": "integer"
                        },
                        "high_rate": {
                            "type": "integer"
                        },
                        "housing_type": {
                            "type": "string",
                            "description": "Returns the housing type of a specific unit."
                        },
                        "housekeeper_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "idology_threshold": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "internal_rank": {
                            "type": "integer"
                        },
                        "internet_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "late_checkout_offer_exclude": {
                            "type": "integer"
                        },
                        "local_operations_manager": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "login_image": {
                                    "type": "object",
                                    "properties": {
                                        "image_url": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "location": {
                            "$ref": "#/definitions/location"
                        },
                        "lockbox_notes": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "low_rate": {
                            "type": "integer"
                        },
                        "mandatory": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "master_unit": {
                            "type": "integer"
                        },
                        "max_adults": {
                            "type": "integer"
                        },
                        "max_children": {
                            "type": "integer"
                        },
                        "max_occupancy": {
                            "type": "integer"
                        },
                        "max_occupancy_pets": {
                            "type": "integer"
                        },
                        "max_pet_weight": {
                            "type": "integer"
                        },
                        "min_rate": {
                            "type": "integer"
                        },
                        "minminstay": {
                            "type": "integer"
                        },
                        "misc_details": {
                            "type": [
                            "string",
                            "null"
                        ]
                        },
                        "name": {
                            "type": "string"
                        },
                        "notes_for_copywriters": {
                            "type": "string"
                        },
                        "parking_notes": {
                            "type": "string"
                        },
                        "parking_total_cars": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "primary_image_id": {
                            "type": "integer"
                        },
                        "primary_lockbox": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "random_sort": {
                            "type": "number"
                        },
                        "rating": {
                            "type": "number"
                        },
                        "real_unit": {
                            "type": "boolean"
                        },
                        "region_id": {
                            "type": "integer"
                        },
                        "regional_director": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "last_name": {
                                    "type": "string"
                                }
                            }
                        },
                        "registration": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "reserve_balance": {
                            "type": "integer"
                        },
                        "score": {
                            "type": "number"
                        },
                        "send_early_checkin": {
                            "type": "integer"
                        },
                        "standard_ad_headline": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "state_id": {
                            "type": "integer"
                        },
                        "superunits": {
                            "type": "array",
                            "description": "Superunits UnitIDs associated with this unit.",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "terminated": {
                            "$ref": "#/definitions/terminated"
                        },
                        "termination_date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "third_party_desc": {
                            "type": "string"
                        },
                        "timezone": {
                            "type": ["string", "null"],
                            "format": "varchar(255)",
                            "description": "PHP Timezone Name e.g. England/London https://www.php.net/manual/en/timezones.php"
                        },
                        "turnover_day": {
                            "type": "integer"
                        },
                        "unit_area": {
                            "type": "object",
                            "description": "If area data cannot be provided for a unit, this attribute will be `null`",
                            "properties": {
                                "area": {
                                    "type": "integer"
                                },
                                "unit_of_measurement": {
                                    "type": "string",
                                    "description": "Currently, the only unit of measurement available is square footage (`\"square_feet\"`)"
                                }
                            }
                        },
                        "unit_booking_compliance": {
                            "type": "object",
                            "properties": {
                                "display_public_permit_id": {
                                    "type": "boolean"
                                },
                                "display_public_tax_id": {
                                    "type": "boolean"
                                },
                                "min_booking_age": {
                                    "type": "integer"
                                },
                                "permitting_effective_date": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "permit_renewal_date": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "property_permit_id": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "property_tax_id": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            }
                        },
                        "unit_media": {
                            "type": "object",
                            "properties": {
                                "matterport_deactivated": {
                                    "type": "boolean"
                                },
                                "matterport_url": {
                                    "type": "string"
                                }
                            }
                        },
                        "unit_notes": {
                            "type": "string"
                        },
                        "unit_title": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "vacasa_contact_id": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "ID of the Vacasa Contact. Stored in `logins.ID`"
                        },
                        "warning_email": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "wifi_network": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "wifi_password": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "laundry_service": {
                            "type": [
                                "integer"
                            ]
                        },
                        "has_owner_edit_access": {
                            "type": [
                                "integer"
                            ]
                        },
                        "secured_by": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    }
                },
                "included": {
                    "type": "array",
                    "description": "Included resources",
                    "items": [
                        {"$ref": "#/definitions/accounting-entity-unit"},
                        {"$ref": "#/definitions/unit-content"},
                        {"$ref": "#/definitions/unit-overlap"}
                    ]
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "amenities_map": {
                            "type": "object"
                        },
                        "photos_list": {
                            "type": "array",
                            "description": "See documentation on [www.imgix.com](www.imgix.com) for optional query string parameters, such as `auto=compress&fit=crop&h=600&w=900`.",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required": [
                "type",
                "id",
                "attributes"
            ]
        }
,
        "validation-error": {
            "title": "Validation Error",
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "detail": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "meta": {
                                "type": "object",
                                "properties": {
                                    "validation": {
                                        "type": "array",
                                        "items": {}
                                    }
                                }
                            },
                            "status": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "status",
                            "title"
                        ]
                    }
                }
            }
        },
        "user-role": {
    "title": "User Role",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "string"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "UserID": {
                    "type": "integer"
                },
                "RoleID": {
                    "type": "integer"
                },
                "AssignmentDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}
,
        "users-roles": {
    "title": "Users and Roles",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/user-role"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}
,
        "user": {
    "title": "User",
    "type": "object",
    "properties": {
        "type": {
            "type": "string"
        },
        "id": {
            "type": "integer"
        },
        "attributes": {
            "type": "object",
            "properties": {
                "uid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        }
    }
}
,
        "users-with-permission": {
    "title": "Get a users by permission id",
    "type": "object",
    "properties": {
        "meta": {
            "$ref": "#/definitions/meta"
        },
        "data": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/user"
            }
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/standard-error"
            }
        }
    }
}    }
,
    "tags": [
        {
            "name": "Authentication"
        },
        {
            "name": "Accounting Entity Units"
        },
        {
            "name": "Acquisitions"
        },
        {
            "name": "Amenities"
        },
        {
            "name": "Availability"
        },
        {
            "name": "Blocklists"
        },
        {
            "name": "Codes"
        },
        {
            "name": "Contacts"
        },
        {
            "name": "Contracts"
        },
        {
            "name": "Finance Reporting Locations"
        },
        {
            "name": "Guarantees"
        },
        {
            "name": "Identity Checks"
        },
        {
            "name": "Inquiries"
        },
        {
            "name": "Languages"
        },
        {
            "name": "Locations"
        },
        {
            "name": "Logins"
        },
        {
            "name": "Management"
        },
        {
            "name": "Owners"
        },
        {
            "name": "Pages"
        },
        {
            "name": "Quotes"
        },
        {
            "name": "Reservation Adjustments"
        },
        {
            "name": "Reservation Guests"
        },
        {
            "name": "Reservations"
        },
        {
            "name": "Reviews"
        },
        {
            "name": "Units"
        },
        {
            "name": "Unit Amenities"
        },
        {
            "name": "Unit Amenity Properties"
        },
        {
            "name": "Users Roles"
        }
    ]
,
    "x-tagGroups": [
        {
            "name": "Endpoints",
            "tags": [
                "Authentication",
                "Accounting Entity Units",
                "Acquisitions",
                "Amenities",
                "Availability",
                "Blocklists",
                "Codes",
                "Contacts",
                "Contracts",
                "Finance Reporting Locations",
                "Guarantees",
                "Identity Checks",
                "Inquiries",
                "Languages",
                "Locations",
                "Logins",
                "Management",
                "Owners",
                "Owner Holds",
                "Pages",
                "Quotes",
                "Reservation Adjustments",
                "Reservation Guests",
                "Reservations",
                "Reviews",
                "Units",
                "Unit Amenities",
                "Unit Amenity Properties",
                "Unit Blocks",
                "Unit Reservation Buffers",
                "Unit Timezone",
                "Users Roles"
            ]
        }
    ]
}
